(function(){mstrmojo.requiresCls("mstrmojo.dom","mstrmojo.hash","mstrmojo.VisTooltip","mstrmojo.gmaps.MapEnums","mstrmojo.gmaps.MapUtils","mstrmojo.gmaps.geometry.Extent","mstrmojo.gmaps.geometry.Circle","mstrmojo.gmaps.geometry.Polygon","mstrmojo.gmaps.layer.Layer");var $MOJO=mstrmojo,$DOM=$MOJO.dom,$HASH=$MOJO.hash,$GMAPS=$MOJO.gmaps,$MUTIL=$GMAPS.MapUtils,VisTooltip=$MOJO.VisTooltip,$EnumSelctionType=$GMAPS.EnumToolbarState,$GEOMETRY=$GMAPS.geometry,LASSO_ZINDEX=$GMAPS.LASSOLAYER_ZINDEX;var DEFAULT_STYLES={fillColor:"#FFF",fillOpacity:0.5,strokeColor:"#444649",strokeWidth:1,strokeOpacity:0.8,strokeDashArray:[3,3]},UNIT="kilometers",KM_TO_MILE=0.621371192;function convertUnit(unit,distance){if(unit.unit==="miles"){distance*=KM_TO_MILE;}return distance;}function updateRectText(startPoint,endPoint){var rectSelcCenter=this.rectSelcCenter,selectionShape=this.selectionShape,unit=this.getDistanceUnit(),geoWidth,geoHeight;if(!rectSelcCenter){return ;}if(!$MUTIL.checkDefined(startPoint.lat)){this.addGeoInfo2Point(startPoint);}if(!$MUTIL.checkDefined(endPoint.lat)){this.addGeoInfo2Point(endPoint);}geoWidth=selectionShape.coolWPDistance(startPoint.lat,startPoint.lng,startPoint.lat,endPoint.lng);geoHeight=selectionShape.coolWPDistance(startPoint.lat,startPoint.lng,endPoint.lat,startPoint.lng);geoWidth=parseInt(convertUnit(unit,geoWidth));geoHeight=parseInt(convertUnit(unit,geoHeight));rectSelcCenter.update({x:(startPoint.x+endPoint.x)/2,y:(startPoint.y+endPoint.y)/2,text:geoWidth+" x "+geoHeight+" "+unit.unitStr});}mstrmojo.gmaps.layer.LassoLayer=mstrmojo.declare(mstrmojo.gmaps.layer.Layer,null,{scriptClass:"mstrmojo.gmaps.layer.LassoLayer",selectionType:null,selectionShape:null,startPoint:null,isMouseDown:false,indicatorTooltip:null,offset:null,gNode:null,init:function init(props){this._super(props);this.addEventListeners();},_initLayerDomTree:function _initLayerDomTree(){var map=this.map,mapDiv=map&&map.mapDiv,div_=this.div_;if(!mapDiv){return ;}if(!div_){div_=this.div_=$MUTIL.createSvgNode("svg");$MUTIL.appendNode(mapDiv,div_);}$MUTIL.setLayerNodeProps(div_,null,"mstrMap-lassoLayer",map.width,map.height);div_.style["z-index"]=LASSO_ZINDEX;this.gNode=$MUTIL.appendGNode(div_);this._loadOffset();},_loadOffset:function _loadOffset(){var offset=this.getGraphicsOffset();if(offset&&$MUTIL.checkVal(offset.x)&&$MUTIL.checkVal(offset.y)&&!(offset.x===0&&offset.y===0)){this.offset=offset;$MUTIL.setCssTransform(this.gNode,offset);}},initIndicatorTooltip:function initIndicatorTooltip(){var indicatorTooltip=new VisTooltip({placeholder:document.body.appendChild(document.createElement("div")),owner:this});indicatorTooltip.render();indicatorTooltip.toggle(false);indicatorTooltip.domNode.onmouseover=function(){indicatorTooltip.toggle(false);};this.toggleCircleSelectionIndicator(true);this.indicatorTooltip=indicatorTooltip;},toggleCircleSelectionIndicator:function toggleCircleSelectionIndicator(show){var gNode=this.gNode;if(!gNode){return ;}if(show){if(!this.circleSelcDec){this.circleSelcCenter=$MUTIL.createSvgNode("circle");this.circleSelcDec=$MUTIL.createSvgNode("path");this.circleSelcLine=$MUTIL.createSvgNode("line");$MUTIL.setNodeAttributes(this.circleSelcCenter,{r:"3px",fill:DEFAULT_STYLES.strokeColor});this.circleSelcDec.style.fill=DEFAULT_STYLES.strokeColor;this.circleSelcLine.style.stroke=DEFAULT_STYLES.strokeColor;this.circleSelcLine.style.strokeWidth=DEFAULT_STYLES.strokeWidth;gNode.appendChild(this.circleSelcCenter);gNode.appendChild(this.circleSelcDec);gNode.appendChild(this.circleSelcLine);}}else{if(this.circleSelcDec){gNode.removeChild(this.circleSelcCenter);gNode.removeChild(this.circleSelcDec);gNode.removeChild(this.circleSelcLine);delete this.circleSelcCenter;delete this.circleSelcDec;delete this.circleSelcLine;}}},addEventListeners:function addEventListeners(){var div_=this.getNode();if(!!div_){$DOM.attachEvent(div_,"mousedown",this.handleMouseDownEvt.bind(this));$DOM.attachEvent(div_,"mouseup",this.handleMouseUpEvt.bind(this));$DOM.attachEvent(div_,"mousemove",this.handleMouseMoveEvt.bind(this));$DOM.attachEvent(div_,"mouseleave",this.handleMouseLeaveEvt.bind(this));$DOM.attachEvent(div_,"contextmenu",this.handleContextMenuEvt.bind(this));if($DOM.supportsTouches){$DOM.attachEvent(div_,"touchstart",this.handleMouseDownEvt.bind(this));$DOM.attachEvent(div_,"touchend",this.handleMouseUpEvt.bind(this));$DOM.attachEvent(div_,"touchmove",this.handleMouseMoveEvt.bind(this));}}},removeEventListeners:function removeEventListeners(){var div_=this.getNode();if(!!div_){$DOM.detachEvent(div_,"mousedown",this.handleMouseDownEvt);$DOM.detachEvent(div_,"mouseup",this.handleMouseUpEvt);$DOM.detachEvent(div_,"mousemove",this.handleMouseMoveEvt);$DOM.detachEvent(div_,"mouseleave",this.handleMouseLeaveEvt);$DOM.detachEvent(div_,"contextmenu",this.handleContextMenuEvt);if($DOM.supportsTouches){$DOM.detachEvent(div_,"touchstart",this.handleMouseDownEvt);$DOM.detachEvent(div_,"touchend",this.handleMouseUpEvt);$DOM.detachEvent(div_,"touchmove",this.handleMouseMoveEvt);}}},handleContextMenuEvt:function handleContextMenuEvt(evt){if(this.RMCInSelectionState){var mapViewer=this.parent,toolbar=mapViewer&&mapViewer.toolbar;if(toolbar){toolbar.resetSelectionState();}$DOM.stopPropogation(window,evt);$DOM.preventDefault(window,evt);}},handleMouseDownEvt:function handleMouseDownEvt(evt){if(!this.div_){return ;}evt=$MUTIL.getEvent(evt);var mapViewer=this.parent,toolbar=mapViewer&&mapViewer.toolbar,isToolbarInSelectionState=toolbar.inSelectionState();if($MUTIL.isRMClick(evt)&&isToolbarInSelectionState){this.RMCInSelectionState=true;return ;}this.RMCInSelectionState=false;this.isMouseDown=true;this.initSelectionShape(this._posFromMapContainerToGNode($MUTIL.getEvtCoordInsideNode(evt,this.getNode())));},handleMouseUpEvt:function handleMouseUpEvt(){this.isMouseDown=false;if(this.indicatorTooltip){this.indicatorTooltip.toggle(false);}if(this.RMCInSelectionState){return ;}var selectionShape=this.selectionShape,coordinates=selectionShape&&selectionShape.screenPolylineArr;if(this.selectionType===$EnumSelctionType.FREE_SELECT&&coordinates){coordinates[0].push(coordinates[0][0]);}if(this.parent){this.parent.handleLassoDrawEnd(this.selectionShape);}},handleMouseLeaveEvt:function handleMouseLeaveEvt(evt){if(this.isMouseDown!==true){return ;}var toElement=evt&&evt.toElement;if(!!toElement&&((toElement.className.indexOf("vis-tooltip")!==-1)||(!!toElement.parentNode&&toElement.parentNode.className.indexOf("vis-tooltip")!==-1))){return ;}this.handleMouseUpEvt();},handleMouseMoveEvt:function handleMouseMoveEvt(evt){if(this.isMouseDown!==true||!this.div_){return ;}evt=$MUTIL.getEvent(evt);var indicatorTooltip=this.indicatorTooltip;this.updateDrawing(this._posFromMapContainerToGNode($MUTIL.getEvtCoordInsideNode(evt,this.getNode())));if(this.selectionType===$EnumSelctionType.CIRCLE_SELECT&&indicatorTooltip){indicatorTooltip.moveTo(evt.x,evt.y);}},initSelectionShape:function initSelectionShape(startPoint){var gNode=this.gNode,selectionShape=this.createSelectionShape(startPoint),node_;if(!gNode||!selectionShape){return ;}node_=selectionShape.getNode();$MUTIL.insertAsFirstChild(gNode,node_);this.startPoint=startPoint;this.selectionShape=selectionShape;},createSelectionShape:function createSelectionShape(startPoint){var props={},selectionType=this.selectionType,selectionShape;if(!startPoint||!$MUTIL.checkVal(startPoint.x)||!$MUTIL.checkVal(startPoint.y)){return ;}$HASH.copy(DEFAULT_STYLES,props);switch(selectionType){case $EnumSelctionType.RECTANGLE_SELECT:selectionShape=this._createRectShape(props,startPoint);break;case $EnumSelctionType.CIRCLE_SELECT:this.initIndicatorTooltip();selectionShape=this._createCircleShape(props,startPoint);break;case $EnumSelctionType.FREE_SELECT:props.screenPolylineArr=[[{x:startPoint.x,y:startPoint.y}]];selectionShape=new $GEOMETRY.Polygon(props);break;default:break;}return selectionShape;},_createRectShape:function _createRectShape(props,startPoint){var gNode=this.gNode,rectSelcCenter=this.rectSelcCenter=new $GEOMETRY.Text({fontSize:12,isCenterAlign:true,fillColor:"#444649",fillOpacity:1});if(gNode){gNode.appendChild(rectSelcCenter.getNode());}props.x=startPoint.x;props.y=startPoint.y;return new $GEOMETRY.Extent(props);},_createCircleShape:function _createCircleShape(props,startPoint){var circleSelcCenter=this.circleSelcCenter;$MUTIL.setNodeAttributes(circleSelcCenter,{cx:startPoint.x,cy:startPoint.y});startPoint=this.addGeoInfo2Point(startPoint);$HASH.copy(startPoint,props);props.radius=0;return new $GEOMETRY.Circle(props);},addGeoInfo2Point:function addGeoInfo2Point(point){if(!point||!$MUTIL.checkVal(point.x)||!$MUTIL.checkVal(point.y)){return point;}var baseLayer=this.getBaseLayer(),latLng=baseLayer&&baseLayer.pixelXYtoLatLng(this._posFromGNodeToMapContainer(point));if(latLng){point.lat=latLng.lat;point.lng=latLng.lng;}return point;},_posFromGNodeToMapContainer:function _posFromGNodeToMapContainer(point){var offset=this.offset;if(!offset||!$MUTIL.checkVal(point.x)||!$MUTIL.checkVal(point.y)){return point;}else{return{x:point.x+offset.x,y:point.y+offset.y};}},_posFromMapContainerToGNode:function _posFromMapContainerToGNode(point){var offset=this.offset;if(!offset||!$MUTIL.checkVal(point.x)||!$MUTIL.checkVal(point.y)){return point;}else{return{x:point.x-offset.x,y:point.y-offset.y};}},updateDrawing:function updateDrawing(point){var selectionType=this.selectionType,selectionShape=this.selectionShape,startPoint=this.startPoint;if(!startPoint||!point||!$MUTIL.checkVal(point.x)||!$MUTIL.checkVal(point.y)){return ;}switch(selectionType){case $EnumSelctionType.RECTANGLE_SELECT:this.updateDrawingRect({x:startPoint.x,y:startPoint.y},point);break;case $EnumSelctionType.CIRCLE_SELECT:this.updateDrawingCircle(startPoint,point);break;case $EnumSelctionType.FREE_SELECT:selectionShape.addScreenPoint(point);break;default:break;}},updateDrawingRect:function updateDrawingRect(startPoint,endPoint){if(!startPoint||!endPoint){return ;}var width=endPoint.x-startPoint.x,height=endPoint.y-startPoint.y,selectionShape=this.selectionShape,x,y;x=(width<0)?endPoint.x:startPoint.x;y=(height<0)?endPoint.y:startPoint.y;selectionShape.update({x:x,y:y,width:Math.abs(width),height:Math.abs(height)});updateRectText.call(this,startPoint,endPoint);},updateDrawingCircle:function updateDrawingCircle(startPoint,endPoint){if(!startPoint||!endPoint){return ;}var x1=endPoint.x-startPoint.x,y1=endPoint.y-startPoint.y,radius=Math.sqrt(x1*x1+y1*y1),selectionShape=this.selectionShape;if(!selectionShape||!$MUTIL.checkVal(radius)){return ;}selectionShape.setRadius(radius);if(this.indicatorTooltip){this.updateCircleSelectionIndicator(startPoint,endPoint);this.indicatorTooltip.toggle(true);}},updateCircleSelectionIndicator:function updateCircleSelectionIndicator(startPoint,endPoint){if(this.selectionType!==$EnumSelctionType.CIRCLE_SELECT){return ;}this.updateIndicateTooltipContent(startPoint,endPoint);this.updateIndicateArrow(startPoint,endPoint);},updateIndicateTooltipContent:function updateIndicateTooltipContent(startPoint,endPoint){var div_=this.getNode(),indicatorTooltip=this.indicatorTooltip,selectionShape=this.selectionShape,unit=this.getDistanceUnit(),distance;if(!div_||!indicatorTooltip||!selectionShape||!startPoint||!endPoint){return ;}endPoint=this.addGeoInfo2Point(endPoint);distance=selectionShape.coolWPDistance(endPoint.lat,endPoint.lng,startPoint.lat,startPoint.lng);selectionShape.geoRadius=distance;distance=convertUnit(unit,distance);indicatorTooltip.displayInfo([{n:"Radius",v:distance.toFixed(2)+" "+unit.unitStr},{n:"Longitude",v:endPoint.lng.toFixed(3)},{n:"Latitude",v:endPoint.lat.toFixed(3)}]);},getDistanceUnit:function getDistanceUnit(){var mapViewer=this.parent,host=mapViewer&&mapViewer.parent;return host?host.getDistanceUnit():{unit:UNIT,unitStr:"km"};},updateIndicateArrow:function updateIndicateArrow(startPoint,endPoint){if(!this.circleSelcDec||!this.circleSelcLine||!startPoint||!endPoint){return ;}var circleSelcDec=this.circleSelcDec,circleSelcLine=this.circleSelcLine,rotate=function(x,y,angle,length){var vx=x*Math.cos(angle)-y*Math.sin(angle),vy=x*Math.sin(angle)+y*Math.cos(angle),d=Math.sqrt(vx*vx+vy*vy);if(length&&d!==0){vx=vx/d*length;vy=vy/d*length;}return{x:vx,y:vy};},x0=startPoint.x,y0=startPoint.y,x1=endPoint.x,y1=endPoint.y,H=10,L=4,angle=Math.atan(L/H),length=Math.sqrt(L*L+H*H),p2=rotate(x1-x0,y1-y0,angle,length),p3=rotate(x1-x0,y1-y0,-angle,length),x2=x1-p2.x,y2=y1-p2.y,x3=x1-p3.x,y3=y1-p3.y,pointStr="M "+x1+" "+y1+" L"+x2+" "+y2+" L"+x3+" "+y3;$MUTIL.setNodeAttributes(circleSelcDec,{d:pointStr});$MUTIL.setNodeAttributes(circleSelcLine,{x1:x0,y1:y0,x2:x1,y2:y1});},destroySelectionShape:function destroySelectionShape(){var gNode=this.gNode,selectionShape=this.selectionShape;if(!gNode){return ;}gNode.innerHTML="";if(selectionShape){selectionShape.destroy();}this.selectionShape=null;},destroyIndicator:function destroyIndicator(){var indicatorTooltip=this.indicatorTooltip,rectSelcCenter=this.rectSelcCenter;$MUTIL.destroyObj(indicatorTooltip);this.toggleCircleSelectionIndicator(false);delete this.indicatorTooltip;$MUTIL.destroyObj(rectSelcCenter);delete this.rectSelcCenter;},destroy:function destroy(){this.destroyIndicator();this.destroySelectionShape();this.gNode=null;this._super();}});}());