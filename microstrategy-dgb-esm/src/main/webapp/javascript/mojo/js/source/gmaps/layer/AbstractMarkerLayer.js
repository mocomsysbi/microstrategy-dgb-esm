(function(){mstrmojo.requiresCls("mstrmojo.array","mstrmojo.gmaps.MapEnums","mstrmojo.gmaps.layer.GraphicLayer","mstrmojo.gmaps.MapUtils","mstrmojo.gmaps.geometry.Extent","mstrmojo.gm.GMUtility","mstrmojo.vi.viz.MapHelper");var $MOJO=mstrmojo,$HASH=$MOJO.hash,$GMAPS=$MOJO.gmaps,$EnumThreholdType=$GMAPS.EnumThresholdType,$EnumBaseMapType=$GMAPS.EnumBaseMapType,$MUTIL=$GMAPS.MapUtils,Extent=$GMAPS.geometry.Extent,$GM=$MOJO.gm,$GMU=$GM.GMUtility;mstrmojo.gmaps.layer.AbstractMarkerLayer=mstrmojo.declare(mstrmojo.gmaps.layer.GraphicLayer,null,{scriptClass:"mstrmojo.gmaps.layer.AbstractMarkerLayer",rowCount:null,markerElementIDs:null,lookupColumnIndex:-1,initGraphics:function initGraphics(){this._super();this.ImageThreshold=false;var shapeInfoArr=this.shapeInfoArr=this.loadShapeInfo();if(this.ImageThreshold&&this.getBaseMapType()===$EnumBaseMapType.Mapbox){shapeInfoArr=shapeInfoArr.filter(function(shapeInfo){return shapeInfo.attributes.threshold;});}if(shapeInfoArr){this.buildGraphics(shapeInfoArr);}this.updateMapExtent();},loadShapeInfo:function loadShapeInfo(){var dropZones=this.dropZones,geoAttrIndics=[],rowAttributes=this.getDataRows(),rowHeaders=this.getDataRowHeaders(),rowCount=rowHeaders&&rowHeaders.length,attributes={},geoExtent=new Extent({isGeo:this.isGeoDataLayer()}),shapeInfoArr=[],geoIndex,geoElement,geoId="",rowIndex,rowHeaderElements,latitudeElement,longitudeElement,latitude,longitude,latitudeId,longitudeId,latIndex,longIndex,geoMapping,pointInfo,lookupAttrElement,lookupAttrId,lookupIndex,strippedElementID,colCount=this.primaryModel.getTotalCols(),minMaxMap=this.minMaxMap={},minValue=Infinity,maxValue=-Infinity,absMinValue=Infinity,absMaxValue=0,idKey,idCache={},colorAttrIdx=this.getColorAttrIdx(),rowIndexArr=[],sizeByVal;this.markerElementIDs={};geoMapping=this.findMappableAttributes(rowAttributes,geoAttrIndics,dropZones,this.useAttribute);if(!geoMapping){this.updateMapExtent();$MUTIL.log("No Mappable attributes present on the report.");return ;}if(!this.dataValidate()){this.updateMapExtent();$MUTIL.log("Unsupported NDE format.");return ;}latIndex=geoMapping[0];longIndex=geoMapping[1];geoIndex=geoMapping[2];lookupIndex=this.lookupColumnIndex;if(latIndex===undefined||longIndex===undefined){this.updateMapExtent();return ;}if(!this.infoTemplate){this.infoTemplate=this.populateInfoTemplate([latIndex,longIndex]);}for(rowIndex=rowCount-1;rowIndex>=0;){rowHeaderElements=rowHeaders[rowIndex].items;if(geoIndex!==null&&geoIndex>=0){geoElement=rowHeaderElements[geoIndex];geoId=rowAttributes[geoIndex].es[geoElement.idx].id;}latitudeElement=rowHeaderElements[latIndex];if(!latitudeElement||latitudeElement.idx<0){rowIndex--;continue;}latitude=rowAttributes[latIndex].es[latitudeElement.idx].n;latitude=latitude.replace(",",".");latitudeId=rowAttributes[latIndex].es[latitudeElement.idx].id;if(latitudeId.indexOf("DB:")===0||$MUTIL.trimString(latitude)===""){rowIndex--;continue;}longitudeElement=rowHeaderElements[longIndex];if(!longitudeElement||longitudeElement.idx<0){rowIndex--;continue;}longitude=rowAttributes[longIndex].es[longitudeElement.idx].n;longitude=longitude.replace(",",".");longitudeId=rowAttributes[longIndex].es[longitudeElement.idx].id;if(longitudeId.indexOf("DB:")===0||$MUTIL.trimString(longitude)===""){rowIndex--;continue;}if(this.isGeoDataLayer()&&!$MUTIL.isValidLatLng(latitude,longitude)){rowIndex--;continue;}if(latitudeId===longitudeId){idKey=latitudeId;}else{if(this.showOneMarkerForSameLocation){idKey=latitudeId+"|"+longitudeId;}else{idKey=latitudeId+"|"+longitudeId+"|"+geoId;}}if(idCache[idKey]!==undefined){idCache[idKey].rowIndices.push(rowIndex);rowIndex--;continue;}if(this.useAttribute&&lookupIndex>=0){lookupAttrElement=rowHeaderElements[lookupIndex];lookupAttrId=rowAttributes[lookupIndex].es[lookupAttrElement.idx].id;}else{lookupAttrId=latitudeId;}strippedElementID=this.getElementIdWithoutAttributeID(lookupAttrId);attributes=this.populateGraphicAttributes(rowIndex,latIndex,longIndex,rowHeaderElements,rowAttributes,geoAttrIndics);idCache[idKey]=attributes;if(this.isColorByAttr===true&&colorAttrIdx>=0){rowIndexArr.push(rowIndex);}if(this.sizeMetricIdx>-1&&this.sizeMetricIdx<colCount){sizeByVal=attributes.sizeByMetricVal;sizeByVal=$MUTIL.checkVal(sizeByVal)?sizeByVal:0;maxValue=Math.max(maxValue,sizeByVal);minValue=Math.min(minValue,sizeByVal);absMaxValue=Math.max(absMaxValue,Math.abs(sizeByVal));absMinValue=Math.min(absMinValue,Math.abs(sizeByVal));}latitude=parseFloat(latitude);longitude=parseFloat(longitude);geoExtent.mergePoint(latitude,longitude);this.markerElementIDs[strippedElementID]={lat:latitude,lng:longitude};pointInfo={type:"Point",geoData:{lat:latitude,lng:longitude},attributes:attributes};shapeInfoArr.push(pointInfo);rowIndex--;}if(this.sizeMetricIdx>-1&&this.sizeMetricIdx<colCount){minMaxMap[this.sizeMetricIdx]={min:minValue,max:maxValue,absMin:absMinValue,absMax:absMaxValue};}this.geoExtent=geoExtent;if(this.isColorByAttr===true&&colorAttrIdx>=0){this.generateColorMap(rowIndexArr,colorAttrIdx);this.addColorInfoBySingleAttr(shapeInfoArr,colorAttrIdx);this.processLegendColorByInfo();}return shapeInfoArr;},addColorInfoBySingleAttr:function addColorInfoBySingleAttr(shapeInfoArr,colorAttrIdx){var i,shapeInfoArrLength=shapeInfoArr.length,shapeInfoAttributes;for(i=0;i<shapeInfoArrLength;i++){shapeInfoAttributes=shapeInfoArr[i]&&shapeInfoArr[i].attributes;this.generateColorInfo(shapeInfoAttributes,colorAttrIdx);}},populateGraphicAttributes:function populateGraphicAttributes(rowIndex,latIndex,longIndex,rowHeaderElements,rowAttributes,geoAttrIndics){var attributes={},rowHeaderElement,geoIndex,longGeoIndex,elementValue,i,il,dlTextName="",sliceAttrIdxs=this.sliceAttrIdxs||[],rhIdx,rowAttr;for(i=0,il=rowHeaderElements.length;i<il;i++){rowHeaderElement=rowHeaderElements[i];rhIdx=rowHeaderElement.idx;rowAttr=rowAttributes[i];if(rhIdx<0){continue;}if(i===latIndex){geoIndex=rhIdx;}if(i===longIndex){longGeoIndex=rhIdx;}if(sliceAttrIdxs.indexOf(i)<0){elementValue=rowAttr.es[rhIdx]&&rowAttr.es[rhIdx].n;attributes[$MUTIL.replaceSpace(rowAttr.n)]=elementValue;}if(geoAttrIndics.indexOf(i)>=0){dlTextName+=!dlTextName?elementValue:" "+elementValue;}}attributes.dataLabelText=attributes.geoName=dlTextName;attributes.geoIndex=geoIndex;attributes.longGeoIndex=longGeoIndex;attributes.rowIndices=[rowIndex];attributes.columnIndices=[latIndex,longIndex];if(sliceAttrIdxs.length>0){this.getSliceAttributeInfo(rowIndex,attributes,latIndex,longIndex);}else{this.getGraphicMetricValues(rowIndex,attributes);}return attributes;},getSliceAttributeInfo:function getSliceAttributeInfo(lastRowIndex,attributes,latIndex,longIndex){var rowAttributes=this.getDataRows(),rowHeaders=this.getDataRowHeaders(),rowIndex,i,il,rowHeaderElements,rowHeaderElement,elementValue,slices=[],sliceAttribute,currGeoIndex,currLongGeoIndex,sliceAttrIdxs=this.sliceAttrIdxs||[],geoAttrChanged=false,isSubTotal;for(rowIndex=lastRowIndex;rowIndex>=0&&!geoAttrChanged;){rowHeaderElements=rowHeaders[rowIndex].items;isSubTotal=false;sliceAttribute={};$HASH.copy(attributes,sliceAttribute);for(i=0,il=rowHeaderElements.length;i<il;i++){rowHeaderElement=rowHeaderElements[i];if(rowHeaderElement.idx<0){continue;}if(i===latIndex){currGeoIndex=rowHeaderElement.idx;}if(i===longIndex){currLongGeoIndex=rowHeaderElement.idx;}if($MUTIL.checkVal(currGeoIndex)&&currGeoIndex!==attributes.geoIndex&&$MUTIL.checkVal(currLongGeoIndex)&&currLongGeoIndex!==attributes.longGeoIndex){geoAttrChanged=true;break;}if(rowHeaderElement.stt===1){isSubTotal=true;}if(sliceAttrIdxs.indexOf(i)>=0&&!isSubTotal){elementValue=rowAttributes[i].es[rowHeaderElement.idx].n;sliceAttribute[$MUTIL.replaceSpace(rowAttributes[i].n)]=elementValue;}}if(!geoAttrChanged){this.getGraphicMetricValues(rowIndex,sliceAttribute);if(isSubTotal){if(this.sizeMetricIdx>=0){attributes.sizeByMetricVal=sliceAttribute.sizeByMetricVal;}attributes.rowIndices=[rowIndex];}else{sliceAttribute.rowIndices=[rowIndex];slices.push({attributes:sliceAttribute});}rowIndex--;}}if(!$MUTIL.checkVal(attributes.sizeByMetricVal)&&this.sizeMetricIdx>=0){attributes.sizeByMetricVal=0;for(var idx=0;idx<slices.length;idx++){attributes.sizeByMetricVal+=slices[idx].attributes.sizeByMetricVal;}}attributes.slices=slices;},getGraphicMetricValues:function getGraphicMetricValues(rowIndex,pointAttr){var data=this.data,columnHeaders=this.getDataColHeaders(),columnMetrics=data.gts.col,gvs=data.gvs,values=!!gvs.items?gvs.items[rowIndex].items:[],threshold=this.getThresholdInfo(rowIndex,this.colorMetricIdx),sizeMetricIdx=this.sizeMetricIdx,angleMetricIdx=this.angleMetricIdx,i,il,columnHeaderName,cellElement,metricValue,rv,thresholdType;if(columnHeaders&&columnHeaders.length!==1){return ;}if(!!threshold&&threshold.type!==undefined){pointAttr.threshold=threshold;}for(i=0,il=values.length;i<il;i++){cellElement=columnHeaders[0].items[i];columnHeaderName=columnMetrics[cellElement.tui].es[cellElement.idx].n;if(!columnHeaderName){continue;}metricValue=values[i];thresholdType=metricValue.ty;if(!thresholdType||thresholdType===$EnumThreholdType.Number||(!mstrApp.isExpress&&thresholdType===$EnumThreholdType.Image)){pointAttr[$MUTIL.replaceSpace(columnHeaderName)]=metricValue.v;}else{pointAttr[$MUTIL.replaceSpace(columnHeaderName)]=metricValue.rv;}rv=parseFloat(!metricValue.rv?this.stripNumberFormat(metricValue.v):metricValue.rv);if(i===sizeMetricIdx){pointAttr.sizeByMetricVal=rv;}if(i===angleMetricIdx){pointAttr.absAngleMetricVal=Math.abs(rv);}}},getGeoColumnIndex:function getGeoColumnIndex(){return $MUTIL.checkVal(this.latIndex)?this.latIndex:-1;},findMappableAttributes:function findMappableAttributes(rowAttributes,geoAttrIndics,dropZones,useAttribute){var numTemplateUnits=rowAttributes.length,latFormId=dropZones.latitude,longFormId=dropZones.longitude,attrId=dropZones.geoAttribute,wpLookupAttId=this.wpLookupAttId,geo,formId,tmpGeoAttrId,i;function findGeo(attrId){var rowAttrId,latIndex=-1,longIndex=-1,geoIndex=null;for(i=0;i<numTemplateUnits;i++){rowAttrId=rowAttributes[i].id;if(!useAttribute){if(rowAttrId===attrId){formId=rowAttributes[i].fid;if(formId===latFormId){latIndex=i;}else{if(formId===longFormId){longIndex=i;}else{geoIndex=i;geoAttrIndics.push(i);}}}}else{if(rowAttrId===latFormId){latIndex=i;}else{if(rowAttrId===longFormId){longIndex=i;}else{if(rowAttrId===attrId){geoIndex=i;}}}if(rowAttrId===wpLookupAttId){this.lookupColumnIndex=i;}}}this.latIndex=latIndex;this.longIndex=longIndex;return(latIndex<0||longIndex<0)?false:[latIndex,longIndex,geoIndex];}function findGeoOnTemplate(){var numTemplateUnits=rowAttributes.length,tmpLatIdx=-1,tmpLongIdx=-1,tmpAttrId={},i;for(i=0;i<numTemplateUnits;i++){if(!useAttribute){formId=rowAttributes[i].fid;if(formId===latFormId){tmpLatIdx=i;tmpAttrId[rowAttributes[i].id]=true;}else{if(formId===longFormId){tmpLongIdx=i;tmpAttrId[rowAttributes[i].id]=true;}}}}return(tmpLatIdx>=0&&tmpLongIdx>=0&&$HASH.keyarray(tmpAttrId).length===1)?$HASH.keyarray(tmpAttrId)[0]:null;}geo=findGeo.call(this,attrId);if(geo){return geo;}tmpGeoAttrId=findGeoOnTemplate.call(this);if(tmpGeoAttrId){return findGeo.call(this,tmpGeoAttrId);}return false;},getAngleMetricValue:function getAngleMetricValue(rowIndex){var priModel=this.primaryModel,colCount=priModel.getTotalCols(),angleCell,value,rawValue=0;if(this.angleMetricIdx>=0&&this.angleMetricIdx<colCount){angleCell=priModel.getMetricValue(rowIndex,this.angleMetricIdx);value=angleCell.getValue();rawValue=angleCell.getRawValue();rawValue=parseFloat(!rawValue?this.stripNumberFormat(value):rawValue);if(isNaN(rawValue)){rawValue=0;}}return rawValue;},resetInfoTemplate:function resetInfoTemplate(){var dropZones=this.dropZones,geoAttrIndics=[],rowAttributes=this.getDataRows(),geoMapping,latIndex,longIndex;geoMapping=this.findMappableAttributes(rowAttributes,geoAttrIndics,dropZones,this.useAttribute);latIndex=geoMapping[0];longIndex=geoMapping[1];this.infoTemplate=this.populateInfoTemplate([latIndex,longIndex]);}});}());