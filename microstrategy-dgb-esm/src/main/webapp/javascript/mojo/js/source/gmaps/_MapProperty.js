(function(){mstrmojo.requiresCls("mstrmojo.func","mstrmojo.array","mstrmojo.VisEnum","mstrmojo.gmaps.MapEnums","mstrmojo.gmaps.MapUtils");var $ARR=mstrmojo.array,$FUNC=mstrmojo.func,$GMAPS=mstrmojo.gmaps,$MUTIL=mstrmojo.gmaps.MapUtils,$EnumBaseMapType=$GMAPS.EnumBaseMapType,$EnumDefaultMapStyle=$GMAPS.EnumDefaultMapStyle,$EnumPropertyType=$GMAPS.EnumPropertyType,$EnumZoomBehavior=$GMAPS.EnumZoomBehavior,$EnumGraphicType=$GMAPS.EnumGraphicType,$EnumClusterMode=$GMAPS.EnumClusterMode,$EnumMarkerType=$GMAPS.EnumMarkerType,$EnumDataLabelProps=$GMAPS.EnumDataLabel,$VIS_ENUM=mstrmojo.VisEnum,ENUM_LEGEND_MODE=$VIS_ENUM.EnumLegendMode,ENUM_SINGLE_LGD_MODE=$VIS_ENUM.EnumSingleLegendMode,$LegendProperty=$VIS_ENUM.LegendPropertyTag,$EnumShapeFormatProps=$GMAPS.EnumShapeFormatting,$ENUM_LINE_STYLE=$GMAPS.EnumCombinedLineStyle,$EnumDistUnitType=$GMAPS.EnumDistUnitType,COLLAPSE_LGD=$EnumPropertyType.collapseLegend,LGD_SWITCH=$EnumPropertyType.legendSwitch,LGD_SIZE=$EnumPropertyType.legendSize;var COMMON_PROPERTIES=[$EnumPropertyType.baseMapType,$EnumPropertyType.mapStyle,$EnumPropertyType.zoomSetting,$EnumPropertyType.editingLayerIdx,$EnumPropertyType.keepZoomAndPos,$EnumPropertyType.zoomLevel,$EnumPropertyType.mapCenter,$EnumPropertyType.mapBearing,$EnumPropertyType.mapPitch,$EnumPropertyType.enableZoomThroughLayer,$EnumPropertyType.showMapLable,$EnumPropertyType.mapLabelOnTop,$EnumPropertyType.distUnit,$EnumPropertyType.languageType,$EnumPropertyType.tooltipSwitch],DataLabelProps=[$EnumDataLabelProps.DATA_LABEL_SHOW,$EnumDataLabelProps.DATA_LABEL_SHOW_ALL,$EnumDataLabelProps.DATA_LABEL_FONT_FAMILY,$EnumDataLabelProps.DATA_LABEL_FONT_SIZE,$EnumDataLabelProps.DATA_LABEL_FONT_STYLE,$EnumDataLabelProps.DATA_LABEL_FONT_COLOR],ShapeFormatProps=[$EnumShapeFormatProps.SHAPE_FORMAT_FILL_COLOR,$EnumShapeFormatProps.SHAPE_FORMAT_FILL_OPACITY,$EnumShapeFormatProps.SHAPE_FORMAT_BORDER_COLOR,$EnumShapeFormatProps.SHAPE_FORMAT_BORDER_STYLE],MaxMinSizeOptionProps=[$EnumPropertyType.MAX_SIZE_TYPE,$EnumPropertyType.MAX_SIZE_VALUE,$EnumPropertyType.MIN_SIZE_TYPE,$EnumPropertyType.MIN_SIZE_VALUE];function isZoomAndPosUnChanged(baseLayer,properties,newObj){var zoomLevel,mapCenter,bearing,pitch;try{zoomLevel=parseFloat(properties[$EnumPropertyType.zoomLevel]);mapCenter=JSON.parse(properties[$EnumPropertyType.mapCenter]);if(newObj[$EnumPropertyType.zoomLevel]===zoomLevel&&baseLayer.isSameCenter(newObj[$EnumPropertyType.mapCenter],mapCenter)){if(!newObj.supportBearingAndPitch){return true;}bearing=parseFloat(properties[$EnumPropertyType.mapBearing]);pitch=parseFloat(properties[$EnumPropertyType.mapPitch]);if(newObj[$EnumPropertyType.mapBearing]===bearing&&newObj[$EnumPropertyType.mapPitch]===pitch){return true;}}return false;}catch(e){$MUTIL.log("Parse Zoom Level and Center Point Error");return false;}}mstrmojo.gmaps._MapProperty=mstrmojo.provide("mstrmojo.gmaps._MapProperty",{_mixinName:"mstrmojo.gmaps._MapProperty",handlePropValChange:function handlePropValChange(layerKey,propName,newValue,silentSubmit){if(!$MUTIL.checkDefined(layerKey)||!$MUTIL.checkDefined(propName)){return ;}if(DataLabelProps.indexOf(propName)>=0){this.onDataLabelFormattingChange(layerKey);return ;}if(ShapeFormatProps.indexOf(propName)>=0){this.onShapeFomattingChange(layerKey,propName,newValue);return ;}if(MaxMinSizeOptionProps.indexOf(propName)>=0){this.onMaxMinSizeOptionChange(layerKey);if(propName===$EnumPropertyType.MIN_SIZE_TYPE){this.resetLegendSizeByData(layerKey);}return ;}switch(propName){case $EnumPropertyType.baseMapType:this.onBaseMapTypeChange();break;case $EnumPropertyType.mapStyle:this.onMapStyleChange();break;case $EnumPropertyType.languageType:this.onLanguageChange();break;case $EnumPropertyType.zoomSetting:this.onZoomSettingChange(newValue);break;case $EnumPropertyType.graphicType:this.onGraphicTypeChange(layerKey,newValue,silentSubmit);break;case $EnumPropertyType.markerType:this.onMarkerTypeChange(layerKey,newValue);break;case $EnumPropertyType.themeType:this.onDensityThemeChange(layerKey);break;case $EnumPropertyType.clusterMode:this.onClusterModeChange(layerKey,newValue);break;case $EnumPropertyType.clusterRadius:this.onClusterRadiusChange(layerKey,newValue);break;case $EnumPropertyType.clusterMaxZoom:this.onClusterMaxZoomChange(layerKey,newValue);break;case $EnumPropertyType.shapeFile:this.onBoundariesChange(layerKey,newValue);break;case $EnumPropertyType.legendSwitch:this.onLegendSwitch(layerKey,newValue);break;case $EnumPropertyType.isHidden:this.onLayerVisibleChange(layerKey,newValue);break;case $LegendProperty.LEGEND_MODE:this.onLegendCollapseChange(layerKey,newValue);break;case $LegendProperty.SCALE_LEGEND_WIDTH:this.onLegendResized(layerKey,newValue);break;case $EnumPropertyType.collapseLegend:this.handleLegendCollapsePropChange(layerKey,newValue);break;case $LegendProperty.LEGEND_POSITION:this.onLegendPosChange(newValue);break;case $EnumPropertyType.layerName:this.synchronizeLayerName(layerKey,newValue);break;case $EnumPropertyType.enableZoomThroughLayer:this.onLayerZoomRangeChange();break;case $EnumPropertyType.minLayerZoomLvl:case $EnumPropertyType.maxLayerZoomLvl:this.onLayerZoomRangeChange();this.refreshLegendNodes();break;case $EnumPropertyType.showMapLable:this.toggleBaseMapLabels(newValue);break;case $EnumPropertyType.mapLabelOnTop:this.toggleBaseMapLabelsPos(newValue);break;case $EnumPropertyType.colorByOpacity:this.onLayerColorByOpacityChange(layerKey,newValue);break;case $EnumPropertyType.legendSize:this.handleLegendConSizePropChange(newValue);break;default:break;}},onBaseMapTypeChange:function onBaseMapTypeChange(){var mapViewer=this.mapViewer,props=this.getProperties(),baseMapPropName=$EnumPropertyType.baseMapType,edtModel=this.edtModel,newBaseMapType=props&&props[baseMapPropName];if(!mapViewer||!$MUTIL.checkDefined(newBaseMapType)){return ;}if(edtModel){this.propEditorListener={listener:edtModel,callback:function(){edtModel.onBaseMapTypeChange();}};}this.updateProperties($EnumPropertyType.mapStyle,this.getDefaultMapStyle(newBaseMapType));mapViewer.switchBaseMap(newBaseMapType);},getDefaultMapStyle:function getDefaultMapStyle(type){var style;switch(type){case $EnumBaseMapType.Esri:style=$EnumDefaultMapStyle.Esri;break;case $EnumBaseMapType.Google:style=$EnumDefaultMapStyle.Google;break;case $EnumBaseMapType.Image:style=$EnumDefaultMapStyle.Image;break;case $EnumBaseMapType.Mapbox:style=$EnumDefaultMapStyle.Mapbox;break;default:break;}return style;},onMapStyleChange:function onMapStyleChange(){var mapViewer=this.mapViewer,baseLayer=mapViewer&&mapViewer.baseLayer,stylePropName=$EnumPropertyType.mapStyle,props=this.getProperties();if(!baseLayer||!props){return ;}if(baseLayer.setMapStyle instanceof Function){baseLayer.setMapStyle(props[stylePropName]);}},onLanguageChange:function onLanguageChange(){var mapViewer=this.mapViewer,baseLayer=mapViewer&&mapViewer.baseLayer,languagePropName=$EnumPropertyType.languageType,props=this.getProperties();if(!baseLayer||!props){return ;}if(baseLayer.setLanguage instanceof Function){baseLayer.setLanguage(props[languagePropName]);}},onZoomSettingChange:function onZoomSettingChange(newValue){var mapViewer=this.mapViewer,baseLayer=mapViewer&&mapViewer.baseLayer;if(!baseLayer){return ;}switch(newValue){case $EnumZoomBehavior.Automatic:this.updateProperties($EnumPropertyType.mapGeoExtent);break;case $EnumZoomBehavior.Keep:this.updateProperties($EnumPropertyType.mapGeoExtent);break;default:break;}if(mapViewer.updateMapExtent instanceof Function){mapViewer.updateMapExtent();}},onGraphicTypeChange:function onGraphicTypeChange(layerKey,newValue,silentSubmit){var mapViewer=this.mapViewer,graphicLayer=this.getGraphicLayer(layerKey),edtModel=this.edtModel,markerType="",clusterMode;switch(newValue){case $EnumGraphicType.Marker:markerType=this.defaultMarkerType;break;case $EnumGraphicType.Bubble:markerType=$EnumMarkerType.Circle;clusterMode=this.getPropertyValue($EnumPropertyType.clusterMode,layerKey);if(clusterMode===$EnumClusterMode.PIE){this.updateProperties($EnumPropertyType.clusterMode,$EnumClusterMode.ON,layerKey);}break;case $EnumGraphicType.Area:this.updateProperties($EnumPropertyType.shapeFile,edtModel.getAreaShape(),layerKey);this.updateProperties($EnumPropertyType.clusterMode,"",layerKey);break;default:this.updateProperties($EnumPropertyType.clusterMode,"",layerKey);break;}this.updateProperties($EnumPropertyType.markerType,markerType,layerKey);if(silentSubmit&&mapViewer&&graphicLayer){mapViewer.rebuildGraphicLayer(graphicLayer.data);}},onShapeFomattingChange:function onShapeFomattingChange(layerKey,property,newValue){var graphicLayer=this.getGraphicLayer(layerKey);if(!!graphicLayer){this.updateGraphicShapeFormat(layerKey,property,newValue);}},updateGraphicShapeFormat:function(layerKey,property,newValue){var graphicLayer=this.getGraphicLayer(layerKey),_viewer=graphicLayer&&graphicLayer._viewer,graphics=graphicLayer&&graphicLayer.getAllGraphicsForHighlight();if(_viewer){switch(property){case $EnumShapeFormatProps.SHAPE_FORMAT_BORDER_STYLE:this.convertLineStyle(newValue);_viewer.setShapeStrokeStyle({shapeBorderWidth:this.shapeBorderWidth,shapeBorderStyle:this.shapeBorderStyle,shapeBorderLineDash:this.shapeBorderLineDash},graphics);break;case $EnumShapeFormatProps.SHAPE_FORMAT_FILL_OPACITY:var mapViewer=this.mapViewer;this.convertShapeFillOpacity(newValue);this.resetLegendColorByData(layerKey);_viewer.setShapeFillOpacity(this.shapeFillOpacity,graphics);if(mapViewer){mapViewer.highlightAllLayers();}break;case $EnumShapeFormatProps.SHAPE_FORMAT_FILL_COLOR:_viewer.setShapeFillColor(newValue,graphics);break;case $EnumShapeFormatProps.SHAPE_FORMAT_BORDER_COLOR:_viewer.setShapeStrokeColor(newValue,graphics);break;}}},convertLineStyle:function convertLineStyle(lineStyle){var lineStyleValue=parseInt(lineStyle,10),borderWidth=1,borderStyle="solid",lineDashArray=[];switch(lineStyleValue){case $ENUM_LINE_STYLE.THIN:borderWidth=1;borderStyle="solid";break;case $ENUM_LINE_STYLE.THICK:borderWidth=2;borderStyle="solid";break;case $ENUM_LINE_STYLE.DASHED:borderWidth=1;borderStyle="dashed";lineDashArray=[2];break;case $ENUM_LINE_STYLE.DOTTED:borderWidth=1;borderStyle="dotted";lineDashArray=[1];break;case $ENUM_LINE_STYLE.NONE:borderWidth=0;borderStyle="none";break;default:borderWidth=1;borderStyle="solid";}this.shapeBorderWidth=borderWidth;this.shapeBorderStyle=borderStyle;this.shapeBorderLineDash=lineDashArray;},convertShapeFillOpacity:function convertShapeFillOpacity(fillOpacity){var opacityPercent=parseInt(fillOpacity,10);this.shapeFillOpacity=opacityPercent/100;},onMarkerTypeChange:function onMarkerTypeChange(layerKey,newValue){var graphicLayer=this.getGraphicLayer(layerKey),mapViewer=this.mapViewer;if(!!graphicLayer&&graphicLayer.switchMarkerType instanceof Function){graphicLayer.switchMarkerType(newValue);}if(mapViewer){mapViewer.highlightAllLayers();}},onDensityThemeChange:function onDensityThemeChange(layerKey){var graphicLayer=this.getGraphicLayer(layerKey);if(!!graphicLayer&&graphicLayer.updateGraphics instanceof Function){graphicLayer.updateGraphics();}},onClusterModeChange:function onClusterModeChange(layerKey,newValue){var graphicLayer=this.getGraphicLayer(layerKey),mapViewer=this.mapViewer;if(!!graphicLayer&&graphicLayer.switchClusterMode instanceof Function){graphicLayer.switchClusterMode(newValue);}if(mapViewer){mapViewer.highlightAllLayers();}},onClusterRadiusChange:function onClusterRadiusChange(layerKey,newValue){var graphicLayer=this.getGraphicLayer(layerKey);if(!!graphicLayer&&graphicLayer.changeClusterRadius instanceof Function){graphicLayer.changeClusterRadius(parseInt(newValue,10));}},onClusterMaxZoomChange:function onClusterMaxZoomChange(layerKey,newValue){var graphicLayer=this.getGraphicLayer(layerKey);if(!!graphicLayer&&graphicLayer.changeClusterMaxZoom instanceof Function){graphicLayer.changeClusterMaxZoom(parseInt(newValue,10));}},onBoundariesChange:function onBoundariesChange(layerKey){var mapViewer=this.mapViewer,graphicLayer=this.getGraphicLayer(layerKey);if(!!mapViewer&&mapViewer.rebuildGraphicLayer instanceof Function&&!!graphicLayer){mapViewer.rebuildGraphicLayer(graphicLayer.data);}},onLayerVisibleChange:function onLayerVisibleChange(layerKey){var graphicLayer=this.getGraphicLayer(layerKey),isVisible=graphicLayer.isVisible(),mapViewer=this.mapViewer;if(!graphicLayer||!mapViewer){console.log("onLayerVisibleChange: invalid graphicLayer/mapViewer.");return ;}graphicLayer.setVisibility(isVisible);if(isVisible){graphicLayer.updateGraphics();}this.handleLegendOnLayerVisibleChange(layerKey);mapViewer.updateBaseMap();mapViewer.highlightAllLayers();},onLegendCollapseChange:function onLegendCollapseChange(layerKey,newValue){var graphicLayer=this.getGraphicLayer(layerKey),lgdCon=this.legendCon,lgdMinimize=parseInt(this.getPropertyValue($EnumPropertyType.collapseLegend,layerKey,false)),isMinimal=lgdCon.isMinimal=(newValue===ENUM_LEGEND_MODE.MINIMIZED);graphicLayer.hEvalSize4Legend();graphicLayer.updateLegend();if(!isMinimal&&lgdMinimize===ENUM_SINGLE_LGD_MODE.COLLAPSE){graphicLayer.renderCollapseMode();}if(isMinimal){lgdCon.triBtn.setAttribute("class","gm-legend-tri-button-collapsed");if(this.autoCollapse){lgdCon.triBtn.setAttribute("title",mstrmojo.desc(13682,"There is not enough space to display the legend"));}else{lgdCon.triBtn.setAttribute("title",mstrmojo.desc(13683,"Maximize Legend"));}lgdCon.closeBtn.style.display="none";lgdCon.splitter.style.display="none";lgdCon.domNode.style.overflow="hidden";lgdCon.isMinimal=true;}else{lgdCon.triBtn.setAttribute("class","gm-legend-tri-button");lgdCon.triBtn.setAttribute("title",mstrmojo.desc(13684,"Minimize Legend"));lgdCon.closeBtn.style.display="block";lgdCon.closeBtn.setAttribute("title",mstrmojo.desc(12002,"Hide Legend"));lgdCon.closeBtn.setAttribute("title",mstrmojo.desc(12002,"Hide Legend"));lgdCon.domNode.style.overflow="visible";lgdCon.isMinimal=false;}},onLegendPosChange:function onLegendPosChange(newValue){var me=this,lgdCon=me.legendCon,docPos=lgdCon&&lgdCon.dockedPositions,currDocPos,docPosIndex,layerKeys=me.layerIdxMappingArr,graphicLayer;$ARR.forEach(docPos,function(position,i){if(parseInt(position.pos)===parseInt(newValue)){currDocPos=position;docPosIndex=i;return false;}});lgdCon.updateDropZonePosition(currDocPos);lgdCon.currDockedPositionIdx=docPosIndex;lgdCon.updateAlignClass();$ARR.forEach(layerKeys,function(key){graphicLayer=me.getGraphicLayer(key);if(graphicLayer&&graphicLayer.legend){graphicLayer.updateSingleLegendAlignClass();}});},synchronizeLayerName:function synchronizeLayerName(layerKey,newValue){this.updateLegendTitle(layerKey,newValue);},onLegendResized:function onLegendResized(layerKey,delta){var graphicLayer=this.getGraphicLayer(layerKey);graphicLayer.resizeLegend(delta);graphicLayer.updateLegend();},onLegendSwitch:function onLegendSwitch(layerKey,newValue){var lgdCon=this.legendCon;if(lgdCon&&lgdCon.isMinimal){this.updateProperties($LegendProperty.LEGEND_MODE,ENUM_LEGEND_MODE.MINIMIZED,layerKey);}else{this.updateProperties($LegendProperty.LEGEND_MODE,ENUM_LEGEND_MODE.RESTORED,layerKey);}this.getGraphicLayer(layerKey).toggleLegend(newValue);},onDataLabelFormattingChange:function onDataLabelFormattingChange(layerKey){var currentLayer=this.getGraphicLayer(layerKey),_viewer=currentLayer&&currentLayer._viewer;if(_viewer){_viewer.updateDataLabelLayer();}},onMaxMinSizeOptionChange:function onMaxMinSizeOptionChange(layerKey){var currentLayer=this.getGraphicLayer(layerKey),mapViewer=this.mapViewer;if(currentLayer&&currentLayer.switchMaxMinOption){currentLayer.switchMaxMinOption();}if(mapViewer){mapViewer.highlightAllLayers();}},onLayerZoomRangeChange:function onLayerZoomRangeChange(layerKey){var fnOnlayerZoomRangeChange=function(graphicLayer){if(!!graphicLayer&&graphicLayer.onLayerZoomRangeChange instanceof Function){graphicLayer.onLayerZoomRangeChange();}},mapViewer=this.mapViewer;if(layerKey){fnOnlayerZoomRangeChange(this.getGraphicLayer(layerKey));}else{mapViewer.forEachGraphicLayer(function(graphicLayer){fnOnlayerZoomRangeChange(graphicLayer);},false,true);mapViewer.reorderGraphicLayers();}if(mapViewer){mapViewer.highlightAllLayers();}},toggleBaseMapLabels:function toggleBaseMapLabels(isVisible){var mapViewer=this.mapViewer,baseLayer=mapViewer&&mapViewer.baseLayer;if(baseLayer){baseLayer.toggleBaseMapLabels(isVisible);}},toggleBaseMapLabelsPos:function toggleBaseMapLabelsPos(onTop){var mapViewer=this.mapViewer,baseLayer=mapViewer&&mapViewer.baseLayer;if(baseLayer){baseLayer.toggleBaseMapLabelsPos(onTop);}},onLayerColorByOpacityChange:function onLayerColorByOpacityChange(layerKey,opacityStr){var layer=this.getGraphicLayer(layerKey);layer.handleLayerColorByOpacity(opacityStr);},isLbGrpEstInBaseLayer:function isLabelsGroupExistInBaseLayer(){var mapViewer=this.mapViewer,baseLayer=mapViewer&&mapViewer.baseLayer;if(baseLayer){return baseLayer.isLabelGroupExist();}return false;},getDefaultDistanceUnit:function getDefaultDistanceUnit(){var language=navigator.language||navigator.userLanguage;if(typeof language==="string"){language=language.substr(0,2).toLowerCase();}return language==="en"?$EnumDistUnitType.Miles:$EnumDistUnitType.KM;},getDistanceUnit:function getDistanceUnit(){var unit=this.getPropertyValue($EnumPropertyType.distUnit);if(unit===undefined){unit=this.getDefaultDistanceUnit();}return unit===$EnumDistUnitType.KM?{unit:"kilometers",unitStr:"km"}:{unit:"miles",unitStr:"miles"};},updateProperties:function updateProperties(propertyName,newValue,layerKey){if(!propertyName){return ;}var properties=this.getPropertyValue(propertyName,layerKey,true),valChanged=true;if(!properties){console.log("invalid properties");return ;}if(!$MUTIL.checkDefined(newValue)){delete properties[propertyName];}else{if(properties[propertyName]===undefined||properties[propertyName].toString()!==newValue.toString()){properties[propertyName]=newValue;}else{valChanged=false;}}if(valChanged){properties[$EnumPropertyType.dirtyVp]=true;}return valChanged;},getGraphicLayer:function getGraphicLayer(key){var mapViewer=this.mapViewer;if(!mapViewer){return ;}key=key||this.getEditingGridKey();return mapViewer.getGraphicLayer(key);},getPropertyBelongingKey:function getPropertyBelongingKey(propertyName,layerKey){if(COMMON_PROPERTIES.indexOf(propertyName)>=0){return this.getGridKey();}return layerKey||this.getEditingGridKey();},getPropertyValue:function getPropertyValue(propertyName,layerKey,allValue){var belongKey=this.getPropertyBelongingKey(propertyName,layerKey),props=this.getProperties(belongKey);if(allValue){return props;}if(props){var result=props[propertyName];return propertyName===$EnumPropertyType.legendSwitch&&!result?false:result;}},writeProperties:function writeProperties(propertyName,newValue,layerKey,noRefresh){if(propertyName===LGD_SWITCH){this.handleLegendSwitch(layerKey,newValue);}var urInfo,requestCallback,hostId=this.id,editingKey=layerKey||this.getPropertyBelongingKey(propertyName),oldValue=this.getPropertyValue(propertyName,editingKey),valChanged=this.updateProperties(propertyName,newValue,editingKey),silentSubmit=true,gtpChange=propertyName===$EnumPropertyType.graphicType,templateChange=false,extraActions=[],dzPropUpdateCallback=this.zonesModel&&this.zonesModel.getUpdateCallback(),actions=this.getExtraActionsforPropetyChange(propertyName,newValue,editingKey),updateAndRefresh=function(propVal,doUpdate){var host=mstrmojo.all[hostId];if(!host){return ;}if(doUpdate){host.updateProperties(propertyName,propVal,editingKey);}if(propertyName!==LGD_SIZE||doUpdate){host.handlePropValChange(editingKey,propertyName,propVal,silentSubmit);}if(silentSubmit&&dzPropUpdateCallback&&!noRefresh){dzPropUpdateCallback.success();}};if(gtpChange){extraActions=this.edtModel&&this.edtModel.getActionsWithUpdateProperty(oldValue);$ARR.forEach(extraActions,function(action){if(action&&action.act==="updateTemplate"){templateChange=true;return false;}});silentSubmit=!templateChange;actions=actions.concat(extraActions||[]);}if(valChanged){updateAndRefresh(newValue,false);urInfo={undo:function(){updateAndRefresh(oldValue,true);},redo:function(){updateAndRefresh(newValue,true);}};if(silentSubmit){urInfo.silent=true;}else{requestCallback=this.getDocModel().controller._getXtabCallback(this);}if(requestCallback){urInfo.callback=requestCallback;}this.submitMapUpdates({actions:actions,requestCallback:requestCallback,urInfo:urInfo},silentSubmit);}},getExtraActionsforPropetyChange:function getExtraActionsforPropetyChange(propertyName,newValue,layerKey){var actions=[],xtab;switch(propertyName){case $EnumPropertyType.layerName:xtab=this.fnGetWidget(layerKey);actions.push(this.getDocModel().getUnitFormatAction(xtab,1,({FormattingAppearance:{Name:newValue}})));break;default:break;}return actions;},writeMultipleProperties:function writeMultipleProperties(newProps,forceRefresh){var urInfo,hostId=this.id,oldProps={},silentSubmit=true,dzPropUpdateCallback=this.zonesModel&&this.zonesModel.getUpdateCallback(),layerKey,layerProps,propName,newValue,oldValue,valChanged,hasValChanged=false,updateAndRefresh=function(newProps,doUpdate){var host=mstrmojo.all[hostId];if(!host){return ;}for(layerKey in newProps){layerProps=newProps[layerKey];for(propName in layerProps){newValue=layerProps[propName];if(doUpdate){host.updateProperties(propName,newValue,layerKey);}host.handlePropValChange(layerKey,propName,newValue,silentSubmit);}}if(silentSubmit&&dzPropUpdateCallback){dzPropUpdateCallback.success();}};for(layerKey in newProps){oldProps[layerKey]={};layerProps=newProps[layerKey];for(propName in layerProps){oldValue=this.getPropertyValue(propName,layerKey);newValue=layerProps[propName];valChanged=this.updateProperties(propName,newValue,layerKey);if(valChanged){oldProps[layerKey][propName]=oldValue;hasValChanged=true;}else{delete newProps[layerKey][propName];}}}if(hasValChanged){updateAndRefresh(newProps,false);urInfo={silent:true,undo:function(){updateAndRefresh(oldProps,true);},redo:function(){updateAndRefresh(newProps,true);}};this.submitMapUpdates({urInfo:urInfo},silentSubmit);}else{if(forceRefresh){updateAndRefresh(newProps,false);}}},handleLegendConCloseChange:function handleLegendConCloseChange(propertyName,newValue){var urInfo,me=this,hostId=me.id,oldValues=[],silentSubmit=true,dzPropUpdateCallback=this.zonesModel&&this.zonesModel.getUpdateCallback(),host,updateAndRefresh=function(oldValues,propVal){$ARR.forEach(oldValues,function(key){host=mstrmojo.all[hostId];if(!host){return ;}host.updateProperties(propertyName,propVal,key);host.handlePropValChange(key,propertyName,propVal,silentSubmit);});if(silentSubmit&&dzPropUpdateCallback){dzPropUpdateCallback.success();}};$ARR.forEach(me.layerIdxMappingArr,function(layerKey){me.updateProperties(propertyName,newValue,layerKey);oldValues.push(layerKey);});if(oldValues.length){updateAndRefresh(oldValues,newValue);urInfo={silent:true,undo:function(){updateAndRefresh(oldValues,true);},redo:function(){updateAndRefresh(oldValues,false);}};this.submitMapUpdates({urInfo:urInfo},silentSubmit);}},handleLegendSwitch:function handleLegendSwitch(layerKey,lgdSwitch){var urInfo,me=this,hostId=me.id,silentSubmit=true,dzPropUpdateCallback=this.zonesModel&&this.zonesModel.getUpdateCallback(),host,rawOldLgdSwitch=this.getPropertyValue(LGD_SWITCH,layerKey),oldLgdSwitch=rawOldLgdSwitch==="true"||rawOldLgdSwitch===true,lgdExist=this.isLegendExist(layerKey),oldLgdSize=this.getPropertyValue(LGD_SIZE),updateAndRefresh=function(layerKey,lgdSwitch,lgdExist,oldLgdSize,doUpdate){var editingKey,lgdSize=oldLgdSize;host=mstrmojo.all[hostId];if(!host){return ;}editingKey=host.getPropertyBelongingKey(LGD_SIZE);if(doUpdate){host.updateProperties(LGD_SWITCH,lgdSwitch,layerKey);}if(!lgdExist){if(!lgdSwitch){host.removeLegendBySwitchProp(layerKey);}else{if(host.createSingleLegend(layerKey)){host.resetLegendContainerHeight();lgdSize=host.getLegendConSizeProp();}}host.updateProperties(LGD_SIZE,lgdSize,editingKey);host.handlePropValChange(editingKey,LGD_SIZE,lgdSize,silentSubmit);}host.handlePropValChange(layerKey,LGD_SWITCH,lgdSwitch,silentSubmit);if(silentSubmit&&dzPropUpdateCallback){dzPropUpdateCallback.success();}};if(me.updateProperties(LGD_SWITCH,lgdSwitch,layerKey)){updateAndRefresh(layerKey,lgdSwitch,lgdExist,oldLgdSize,false);urInfo={silent:true,undo:function(){updateAndRefresh(layerKey,oldLgdSwitch,lgdExist,oldLgdSize,true);},redo:function(){updateAndRefresh(layerKey,lgdSwitch,lgdExist,oldLgdSize,true);}};this.submitMapUpdates({urInfo:urInfo},silentSubmit);}},handleShowAllLegends:function handleShowAllLegends(newSwitch){var urInfo,me=this,hostId=me.id,updateLayers={},silentSubmit=true,dzPropUpdateCallback=this.zonesModel&&this.zonesModel.getUpdateCallback(),host,oldSwitch=!newSwitch,oldLgdSize=this.getPropertyValue(LGD_SIZE),updateAndRefresh=function(layers,lgdSwitch,oldLgdSize){var editingKey,lgdSize=oldLgdSize,sizeReset=false,handleSize=false;host=mstrmojo.all[hostId];if(!host){return ;}editingKey=me.getPropertyBelongingKey(LGD_SIZE);for(var layerKey in layers){host.updateProperties(LGD_SWITCH,lgdSwitch,layerKey);if(layers[layerKey]===false){handleSize=true;if(lgdSwitch){if(host.createSingleLegend(layerKey)){sizeReset=true;}}else{host.removeLegendBySwitchProp(layerKey);}}}if(handleSize){if(sizeReset){host.resetLegendContainerHeight();lgdSize=host.getLegendConSizeProp();}host.updateProperties(LGD_SIZE,lgdSize,editingKey);host.handlePropValChange(editingKey,LGD_SIZE,lgdSize,silentSubmit);}for(var layerKey in layers){host.handlePropValChange(layerKey,LGD_SWITCH,lgdSwitch,silentSubmit);}if(silentSubmit&&dzPropUpdateCallback){dzPropUpdateCallback.success();}};$ARR.forEach(me.layerIdxMappingArr,function(layerKey){if(me.updateProperties(LGD_SWITCH,newSwitch,layerKey)){updateLayers[layerKey]=me.isLegendExist(layerKey);}});if(updateLayers!=={}){updateAndRefresh(updateLayers,newSwitch,oldLgdSize);urInfo={silent:true,undo:function(){updateAndRefresh(updateLayers,oldSwitch,oldLgdSize);},redo:function(){updateAndRefresh(updateLayers,newSwitch,oldLgdSize);}};this.submitMapUpdates({urInfo:urInfo},silentSubmit);}},closeLegendConWithSizeUpdate:function closeLegendConWithSizeUpdate(){var urInfo,me=this,hostId=me.id,updateLayerKeys=[],silentSubmit=true,dzPropUpdateCallback=this.zonesModel&&this.zonesModel.getUpdateCallback(),host,newSize=this.getLegendConSizeProp(),oldSize=this.getPropertyValue(LGD_SIZE),updateAndRefresh=function(layerKeys,lgdSwitch,lgdSize){var editingKey;host=mstrmojo.all[hostId];if(!host){return ;}editingKey=me.getPropertyBelongingKey(LGD_SIZE);host.updateProperties(LGD_SIZE,lgdSize,editingKey);host.handlePropValChange(editingKey,LGD_SIZE,lgdSize,silentSubmit);$ARR.forEach(layerKeys,function(key){host.updateProperties(LGD_SWITCH,lgdSwitch,key);host.handlePropValChange(key,LGD_SWITCH,lgdSwitch,silentSubmit);});if(silentSubmit&&dzPropUpdateCallback){dzPropUpdateCallback.success();}};$ARR.forEach(me.layerIdxMappingArr,function(layerKey){if(me.updateProperties(LGD_SWITCH,false,layerKey)){updateLayerKeys.push(layerKey);}});if(updateLayerKeys.length){updateAndRefresh(updateLayerKeys,false,newSize);urInfo={silent:true,undo:function(){updateAndRefresh(updateLayerKeys,true,oldSize);},redo:function(){updateAndRefresh(updateLayerKeys,false,newSize);}};this.submitMapUpdates({urInfo:urInfo},silentSubmit);}},handleLegendCollapse:function handleLegendCollapse(layerKey,lgdCollapse){var urInfo,me=this,hostId=me.id,silentSubmit=true,dzPropUpdateCallback=this.zonesModel&&this.zonesModel.getUpdateCallback(),host,oldLgdCollapse=parseInt(this.getPropertyValue(COLLAPSE_LGD,layerKey)),lgdSize=this.getLegendConSizeProp(),oldLgdSize=this.getPropertyValue(LGD_SIZE),updateAndRefresh=function(layerKey,lgdCollapse,lgdSize,doUpdate){var editingKey;host=mstrmojo.all[hostId];if(!host){return ;}editingKey=me.getPropertyBelongingKey(LGD_SIZE);if(doUpdate){host.updateProperties(COLLAPSE_LGD,lgdCollapse,layerKey);host.handlePropValChange(layerKey,COLLAPSE_LGD,lgdCollapse,silentSubmit);}host.updateProperties(LGD_SIZE,lgdSize,editingKey);host.handlePropValChange(editingKey,LGD_SIZE,lgdSize,silentSubmit);if(silentSubmit&&dzPropUpdateCallback){dzPropUpdateCallback.success();}};if(me.updateProperties(COLLAPSE_LGD,lgdCollapse,layerKey)){updateAndRefresh(layerKey,lgdCollapse,lgdSize,false);urInfo={silent:true,undo:function(){updateAndRefresh(layerKey,oldLgdCollapse,oldLgdSize,true);},redo:function(){updateAndRefresh(layerKey,lgdCollapse,lgdSize,true);}};this.submitMapUpdates({urInfo:urInfo},silentSubmit);}},handleLegendConStatusChange:function handleLegendConStatusChange(propertyName,newValue){var urInfo,me=this,hostId=me.id,primaryKey=this.getGridKey(),oldValue=this.getPropertyValue(propertyName,primaryKey),valChanged=this.updateProperties(propertyName,newValue,primaryKey),silentSubmit=true,dzPropUpdateCallback=this.zonesModel&&this.zonesModel.getUpdateCallback(),host,updateAndRefresh=function(propVal){$ARR.forEach(me.layerIdxMappingArr,function(key){host=mstrmojo.all[hostId];if(!host){return ;}host.updateProperties(propertyName,propVal,key);host.handlePropValChange(key,propertyName,propVal,silentSubmit);});if(silentSubmit&&dzPropUpdateCallback){dzPropUpdateCallback.success();}};if(valChanged){updateAndRefresh(newValue);if(propertyName===$LegendProperty.SCALE_LEGEND_WIDTH){oldValue=newValue?-newValue:0;}urInfo={silent:true,undo:function(){updateAndRefresh(oldValue);},redo:function(){updateAndRefresh(newValue);}};this.submitMapUpdates({urInfo:urInfo},silentSubmit);}},saveGraphicLayerOrder:function saveGraphicLayerOrder(undoConfig,redoConfig){var urInfo,hostId=this.id,dzPropUpdateCallback=this.zonesModel&&this.zonesModel.getUpdateCallback(),updateAndRefresh=function(updateConfig){var host=mstrmojo.all[hostId];if(!host){return ;}host.updateEditingLayerIdx(updateConfig.edtIdx);host.layerIdxMappingArr=updateConfig.idxMap.slice(0);host.refreshLegendNodes();host.updateGraphicLayerOrder(updateConfig.startIdx);if(dzPropUpdateCallback){dzPropUpdateCallback.success();}};updateAndRefresh(redoConfig);urInfo={silent:true,undo:function(){updateAndRefresh(undoConfig);},redo:function(){updateAndRefresh(redoConfig);}};this.submitMapUpdates({urInfo:urInfo},true);},saveGraphicLayerVisibleInfo:function saveGraphicLayerVisibleInfo(undoConfig,redoConfig){var urInfo,hostId=this.id,dzPropUpdateCallback=this.zonesModel&&this.zonesModel.getUpdateCallback(),updateAndRefresh=function(updateConfig){var host=mstrmojo.all[hostId],mapViewer=host&&host.mapViewer,graphicLayer,value,item,key,isVisible;if(!updateConfig||!mapViewer||!host){return ;}for(key in updateConfig){item=updateConfig[key];value=item.isVisible?"0":"1";host.updateProperties($EnumPropertyType.isHidden,value,key);graphicLayer=mapViewer.getGraphicLayer(key);isVisible=graphicLayer.isVisible();if(!isVisible){graphicLayer.setVisibility(false);}else{graphicLayer.updateGraphics();}host.handleLegendOnLayerVisibleChange(key);}if(dzPropUpdateCallback){dzPropUpdateCallback.success();}mapViewer.updateBaseMap();};updateAndRefresh(redoConfig);urInfo={silent:true,undo:function(){updateAndRefresh(undoConfig);},redo:function(){updateAndRefresh(redoConfig);}};this.submitMapUpdates({urInfo:urInfo},true);},saveGraphicLayerInfoHTML:function saveGraphicLayerInfoHTML(undoConfig,redoConfig){var urInfo,hostId=this.id,updateAndRefresh=function(updateConfig){var host=mstrmojo.all[hostId],mapViewer=host&&host.mapViewer,graphicLayer,item,key,newInfoVal;if(!updateConfig||!mapViewer||!host){return ;}for(key in updateConfig){item=updateConfig[key];newInfoVal=item.value;graphicLayer=mapViewer.getGraphicLayer(key);if(graphicLayer){host.updateProperties($EnumPropertyType.customInfoWinTpl,graphicLayer.replaceInfoWindowHTMLMacros(newInfoVal),key);graphicLayer.setInfoWindowHTML(newInfoVal);}}};updateAndRefresh(redoConfig);urInfo={silent:true,undo:function(){updateAndRefresh(undoConfig);},redo:function(){updateAndRefresh(redoConfig);}};this.submitMapUpdates(urInfo,true);},saveZoomLevelandPosition:function saveZoomLevelandPosition(){var docModel=this.getDocModel(),mapViewer=this.mapViewer,baseLayer=mapViewer&&mapViewer.baseLayer,properties=this.getProperties(),enableSaving=properties[$EnumPropertyType.zoomSetting]!==$EnumZoomBehavior.Automatic,isChecked=properties[$EnumPropertyType.keepZoomAndPos]===true||properties[$EnumPropertyType.keepZoomAndPos]==="true",zoomPosObj,actions;if(!enableSaving||!isChecked||!mstrApp||!docModel||!baseLayer){return ;}zoomPosObj=baseLayer.getMapZoomAndPosition();if(isZoomAndPosUnChanged(baseLayer,properties,zoomPosObj)){return ;}this.updateProperties($EnumPropertyType.zoomLevel,zoomPosObj[$EnumPropertyType.zoomLevel]);this.updateProperties($EnumPropertyType.mapCenter,JSON.stringify(zoomPosObj[$EnumPropertyType.mapCenter]));if(zoomPosObj.supportBearingAndPitch){this.updateProperties($EnumPropertyType.mapBearing,zoomPosObj[$EnumPropertyType.mapBearing]);this.updateProperties($EnumPropertyType.mapPitch,zoomPosObj[$EnumPropertyType.mapPitch]);}actions=this.getUpdateLayersFormatActions();var params={actions:actions,style:{params:{treesToRender:2},name:"RWIVEMojoStyle"}},config={preserveUndo:false,silent:true,doNotHold:true},request={taskId:"mojoRWManipulation",rwb:docModel.bs,messageID:docModel.mid,stateID:-1,params:JSON.stringify(params),styleName:"RWIVEMojoStyle",suppressData:true,zoomFactor:docModel.getZoomFactor(),saveZoomLevelandPosition:true};mstrApp.serverProxy.request({},request,false,config);},autoSaveZoomAndPos:function autoSaveZoomAndPos(){if(!mstrApp.isDossier){return ;}if(!this.autoSavingFunc){this.autoSavingFunc=$FUNC.debounce(this.saveZoomLevelandPosition,200);}this.autoSavingFunc();}});}());