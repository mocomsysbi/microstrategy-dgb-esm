(function(){mstrmojo.requiresCls("mstrmojo.array","mstrmojo.gmaps.MapUtils","mstrmojo.gmaps.geometry.Geometry");var $ARR=mstrmojo.array,$GMAPS=mstrmojo.gmaps,$MUTIL=$GMAPS.MapUtils,$EnumGeometryType=$GMAPS.EnumGeometryType;mstrmojo.gmaps.geometry.Polygon=mstrmojo.declare(mstrmojo.gmaps.geometry.Geometry,null,{scriptClass:"mstrmojo.gmaps.geometry.Polygon",nodeTag:"path",type:$EnumGeometryType.Polygon,geoPolylineArr:null,screenPolylineArr:null,geoExtent:null,strokeScale:1,update:function update(props){this._super(props);var pathStr=this.generatePath(this.screenPolylineArr);this.setPath(pathStr);},addScreenPoint:function addScreenPoint(point){this._addPointToScreenCoordArr(point);this.setPath(this._addPointToScreenPath(point));},setPath:function setPath(pathStr){if(!!pathStr){$MUTIL.setNodeAttributes(this.node,{d:pathStr});}},loadProps:function loadProps(props){if(!!props&&$ARR.isArray(props.screenPolylineArr)){this.screenPolylineArr=props.screenPolylineArr;}},generatePath:function generatePath(screenPolylineArr){var pathStr="";$ARR.forEach(screenPolylineArr,function(polyline){pathStr+=this.generatePathStrOfPolyline(polyline);},this);return pathStr;},generatePathStrOfPolyline:function generatePathStrOfPolyline(screenPointArr){var pathStr="",point,i,il;if(!$ARR.isArray(screenPointArr)){return pathStr;}point=screenPointArr[0];if(!point||!$MUTIL.checkVal(point.x)||!$MUTIL.checkVal(point.y)){return pathStr;}pathStr="M "+point.x+" "+point.y+" ";for(i=1,il=screenPointArr.length;i<il;i++){point=screenPointArr[i];if(!!point&&$MUTIL.checkVal(point.x)&&$MUTIL.checkVal(point.y)){pathStr+="L "+point.x+" "+point.y+" ";}}return pathStr;},_addPointToScreenPath:function _addPointToScreenPath(point){var pathStr=this.node&&this.node.getAttribute("d");if(!point||!$MUTIL.checkVal(point.x)||!$MUTIL.checkVal(point.y)){return pathStr;}else{if(!!pathStr){return pathStr+"L "+point.x+" "+point.y+" ";}else{return"M "+point.x+" "+point.y+" ";}}},_addPointToScreenCoordArr:function _addPointToScreenCoordArr(point){if(!point||!$MUTIL.checkVal(point.x)||!$MUTIL.checkVal(point.y)){return ;}if(!$ARR.isArray(this.screenPolylineArr)){this.screenPolylineArr=[[]];}this.screenPolylineArr[this.screenPolylineArr.length-1].push(point);},contains:function contains(point){var screenPolylineArr=this.screenPolylineArr,isContained=!1,pointF,pointT,x,y,pointArr,i,lineCount,j,pointCount,k;if(!point||!$MUTIL.checkVal(point.x)||!$MUTIL.checkVal(point.y)||!$ARR.isArray(screenPolylineArr)){console.log("Polygon.contains(): invalid point/screenPolylineArr");return isContained;}x=point.x;y=point.y;for(i=0,lineCount=screenPolylineArr.length;i<lineCount;i++){pointArr=screenPolylineArr[i];if(!$ARR.isArray(pointArr)){continue;}for(j=k=0,pointCount=pointArr.length;j<pointCount;j++){k++;if(k===pointCount){k=0;}pointF=pointArr[j];pointT=pointArr[k];if(!!pointF&&!!pointT&&(pointF.y<y&&pointT.y>=y||pointT.y<y&&pointF.y>=y)&&pointF.x+(y-pointF.y)/(pointT.y-pointF.y)*(pointT.x-pointF.x)<x){isContained=!isContained;}}}return isContained;},intersectPolygon:function intersectPolygon(polygon){if(!polygon||!$ARR.isArray(polygon.screenPolylineArr)||!(polygon.containVertexInPolylineArr instanceof Function)){console.log("intersectPolygon(): invalid polygon");return false;}return this.containVertexInPolylineArr(polygon.screenPolylineArr)||polygon.containVertexInPolylineArr(this.screenPolylineArr);}});}());