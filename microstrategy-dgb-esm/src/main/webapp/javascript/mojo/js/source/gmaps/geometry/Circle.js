(function(){mstrmojo.requiresCls("mstrmojo.gmaps.MapUtils","mstrmojo.gmaps.geometry.Point");var $MUTIL=mstrmojo.gmaps.MapUtils;mstrmojo.gmaps.geometry.Circle=mstrmojo.declare(mstrmojo.gmaps.geometry.Point,null,{scriptClass:"mstrmojo.gmaps.geometry.Circle",nodeTag:"circle",defaultRadius:10,radius:null,geoRadius:null,update:function update(props){this._super(props);if(!!props&&$MUTIL.checkVal(props.radius)){this.radius=props.radius;}this.setRadius(this.radius);},setPosition:function setPosition(props){this._super(props);if($MUTIL.checkVal(this.x)&&$MUTIL.checkVal(this.y)){$MUTIL.setNodeAttributes(this.node,{cx:this.x,cy:this.y});}},setRadius:function setRadius(radius){this.radius=($MUTIL.checkVal(radius))?radius:this.defaultRadius;this.setPosition();if($MUTIL.checkVal(this.radius)){$MUTIL.setNodeAttributes(this.node,{r:parseInt(this.radius)});}},getGeometrySize:function getGeometrySize(){if($MUTIL.checkVal(this.radius)){var diameter=2*this.radius;return{width:diameter,height:diameter};}},contains:function contains(point,geoData){var x,y,point=geoData||point;if(!point||!$MUTIL.checkVal(this.geoRadius)){console.log("Circle.contains(): invalid geo point/radius");return false;}if(point.lat){x=point.lng;y=point.lat;}else{x=point.x;y=point.y;}var distance=this.coolWPDistance(this.lat,this.lng,y,x);return distance<=this.geoRadius;},intersectPolygon:function intersectPolygon(polygon,geoData){if(!polygon){console.log("intersectPolygon(): invalid polygon");return false;}return this._isCenterContained(polygon)||this.containVertexInPolylineArr(geoData);},_isCenterContained:function _isCenterContained(geometry){return !!geometry&&(geometry.contains instanceof Function)&&geometry.contains({x:this.x,y:this.y});}});}());