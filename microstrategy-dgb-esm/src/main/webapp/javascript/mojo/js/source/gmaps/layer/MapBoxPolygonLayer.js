(function(){mstrmojo.requiresCls("mstrmojo.array","mstrmojo.css","mstrmojo.gmaps.MapUtils","mstrmojo.gmaps.MapEnums","mstrmojo.gmaps.layer.CustomLayer","mstrmojo.vi.viz.EnumDSSDropZones","mstrmojo.gmaps._AreaMapHelper","mstrmojo.gmaps.layer._SecondaryGeoRoleHelper");var $MOJO=mstrmojo,$ARR=$MOJO.array,$CSS=$MOJO.css,$GMAPS=$MOJO.gmaps,$MUTIL=$GMAPS.MapUtils,$AMHelper=$GMAPS._AreaMapHelper,$EnumPropertyType=$GMAPS.EnumPropertyType,$EDZ=$MOJO.vi.viz.EnumDSSDropZones,$EnumGeographicRole=$GMAPS.EnumGeographicRole,ATTRIBUTE_DELIMITER=",";var LOOKUP_TABLE_URL={"2101":"https://dl.dropbox.com/s/9huptsjkm74linh/a0.json","2102":"https://dl.dropbox.com/s/cghcc7tt1d45wvh/a1.json","2103":"https://dl.dropbox.com/s/4lpaoirbnd06vbm/a2.json","2104":"https://dl.dropbox.com/s/i9605oi39asvkkt/a3.json","2105":"https://dl.dropbox.com/s/yb0u612rbixazdn/a4.json","2106":"https://dl.dropbox.com/s/oi0o5ngq5nchl77/a5.json","2107":"https://dl.dropbox.com/s/ypeweq4lfp4dyfe/p2.json"};var GEO_ROLE_MAP={"0":["1","2","3"],"1":["2","3"],"2":["3"],"8":["3"],"9":["2","3"]};var ROLE_LEVEL_MAP={"1":2,"2":1,"3":0};function getJSON(jsonURL,cb,errBack){function handleError(e){if(errBack){return errBack(e,jsonURL);}throw e+" ("+jsonURL+")";}try{var r=new XMLHttpRequest();r.open("GET",jsonURL,true);r.onreadystatechange=function(){if(r.readyState!==4){return ;}if(r.status===200){var response=r.responseText;var json=JSON.parse(response);cb(json);return ;}throw"Failed to fetch URL: "+jsonURL+"state: "+r.readyState+"; status: "+r.status;};r.send();}catch(e){handleError(e);}}function toggleClass(index,valid){var node=document.querySelector("div.mstrmojo-VIVizEditor .mstrmojo-VIUnitList .unit.icz12[idx='"+index+"'] .inner-wrap .zone");if(index===0){$CSS.toggleClass(node,"warn",valid);}else{$CSS.toggleClass(node,"secd",valid);$CSS.toggleClass(node,"warn",!valid);}}mstrmojo.gmaps.layer.MapBoxPolygonLayer=mstrmojo.declare(mstrmojo.gmaps.layer.PolygonLayer,[mstrmojo.gmaps.layer._SecondaryGeoRoleHelper],{scriptClass:"mstrmojo.gmaps.layer.MapBoxPolygonLayer",duplicateGeoNamePercent:0,geoSecondaryRolePosition:null,_shapeToRowIndexMap:null,_convertedNameMap:null,nameConversionMap:null,mapConfig:null,lookUpTable:null,mainGeoRole:null,getGeoRole4MainGeoAttr:function getGeoRole4MainGeoAttr(){var shapeId=this.getLayerProp($EnumPropertyType.shapeFile),globalCfg=this.map.getMapConfig().common,shapes=globalCfg.shapes,shape=$AMHelper.getMatchingShape(shapes,shapeId,null);return shape&&shape.roleId;},initGraphics:function initGraphics(toRefresh){var queryFields,shapeId,geoPosition,_shapeInfoArrCache=this._shapeInfoArrCache;if(!this._super()){return ;}$MUTIL.showWait();this.mapConfig=this.initWebMapConfig(false);shapeId=this.getLayerProp($EnumPropertyType.shapeFile);geoPosition=this.geoPosition;if(!$MUTIL.checkVal(geoPosition)||geoPosition<0){this.updateMapExtent();return ;}if(toRefresh&&$ARR.isArray(_shapeInfoArrCache)&&_shapeInfoArrCache.length>0){this.buildLayerContent(_shapeInfoArrCache,geoPosition,null,toRefresh);}else{this._shapeToRowIndexMap={};this._convertedNameMap={};this.mainGeoRole=this.getGeoRole4MainGeoAttr();this.nameConversionMap=this.getNameConversionMap();this.secondaryGeoInfo=this.getSecondaryGeoInfo();queryFields=this.initDataLookup(geoPosition);this.fetchGeoIDByGeoName(shapeId,queryFields,geoPosition);}},initDataLookup:function initDataLookup(geoPosition){var idStringArr=[],rowHeaders=this.getDataRowHeaders(),len=rowHeaders.length,shapeToRowIndexMap=this._shapeToRowIndexMap,secGeoInfo=this.secondaryGeoInfo,secGeoPosition=secGeoInfo&&secGeoInfo.index,secGeoRole=secGeoInfo&&secGeoInfo.geoRole,mainGeoRole=this.mainGeoRole,rowGeoHeader,idString,i,query,primaryGeoName,primaryCvtName,secondGeoName,secondCvtName,originGeoName;for(i=0;i<len;i++){primaryGeoName=this.getElementValue(i,geoPosition);if(!primaryGeoName){continue;}originGeoName=primaryGeoName;primaryCvtName=this.convertName(primaryGeoName,mainGeoRole);idString=primaryCvtName;query={n:primaryCvtName};if(secGeoInfo){secondGeoName=this.getElementValue(i,secGeoPosition);if(secondGeoName){originGeoName+=ATTRIBUTE_DELIMITER+secondGeoName;secondCvtName=this.convertName(secondGeoName,secGeoRole);idString+=ATTRIBUTE_DELIMITER+secondCvtName;query.pn=secondCvtName;}}idString=idString.toLowerCase?idString.toLowerCase():idString;if(shapeToRowIndexMap[idString]){continue;}idStringArr.push(query);rowGeoHeader=rowHeaders[i].items[geoPosition];shapeToRowIndexMap[idString]={rowIndex:i,geoIndex:rowGeoHeader.idx,dlText:primaryGeoName,originGeoName:originGeoName,sfv:secondGeoName};}return idStringArr.length===0?null:JSON.stringify(idStringArr).toLowerCase();},fetchLookUpTable:function fetchLookUpTable(callback){var me=this,features=[],mapConfig=this.mapConfig,shapeKey=mapConfig.ea?mapConfig.ea:"name",shapeToRowIndexMap=this._shapeToRowIndexMap,lookUpURL=LOOKUP_TABLE_URL[this.mainGeoRole],matchKeys;if(lookUpURL){matchKeys=shapeKey.split(",");getJSON(lookUpURL,function(res){var key,feature,geoName,i,matchKey,data_values=res.data;me.lookUpTable=res;for(key in data_values){feature=data_values[key];for(i=0;i<matchKeys.length;i++){matchKey=matchKeys[i];if(matchKey.toLowerCase()==="zip_code"){geoName=key.substring(4);}else{geoName=feature[matchKey]?feature[matchKey].toLowerCase():"";}if(shapeToRowIndexMap[geoName]){features.push({id:key,geoName:geoName});break;}}}callback(features);});}},createFeatures:function createFeatures(res){var key,feature,geoName,secondGeoName,idString,bounds,collection,polygons=[],features=[],data=res.data||{},shapeToRowIndexMap=this._shapeToRowIndexMap;for(key in data){feature=data[key];geoName=feature.n;secondGeoName=feature.pn;idString=geoName;if(secondGeoName){idString+=ATTRIBUTE_DELIMITER+secondGeoName;}if(shapeToRowIndexMap[idString]){bounds=feature.bd;features.push({id:key,geoName:idString,bbox:bounds});if(bounds){polygons.push(turf.bboxPolygon(bounds));}}}collection=turf.featureCollection(polygons);this.polyBBox=turf.bbox(collection);return features;},_calGeoExtent:function _calGeoExtent(isNotGeo){var bbox=this.polyBBox;if(bbox){return{lngWest:bbox[0],latSouth:bbox[1],lngEast:bbox[2],latNorth:bbox[3]};}},fetchGeoIDByGeoName:function fetchGeoIDByGeoName(shapeId,queryFields,geoPosition){if(!(shapeId&&$MUTIL.checkDefined(queryFields)&&$MUTIL.checkDefined(geoPosition))){console.log("fetchGeoIDByGeoName failed: invalid params!");this.updateMapExtent();return ;}var secondGeoRole,secondShape,me=this,timeStart=new Date(),globalCfg=this.map.getMapConfig().common,shapes=globalCfg.shapes,secondaryGeoInfo=this.secondaryGeoInfo,taskParams={taskId:"getMapBoxGeoID",shapeId:shapeId,queryField:queryFields,worldView:"US"},onSuccess=function(res){me.lookUpTable=res;console.log("Geo Name convert time: "+(new Date()-timeStart)+" ms");var features=me.createFeatures(res),mapboxViewer=me.parent;if(!features||features.length===0){me.updateMapExtent();$MUTIL.hideWait();return ;}me.calculateGeoNameDupPercent(features);me.showInfoIcon4GeoItem();me.buildLayerContent(features,geoPosition);if(mapboxViewer){mapboxViewer.highlightAllLayers();}$MUTIL.hideWait();},onError=function(err){$MUTIL.log("Mapbox geo id conversion Error: "+err);$MUTIL.hideWait();$MUTIL.hideWait();};if(secondaryGeoInfo){secondGeoRole=secondaryGeoInfo.geoRole;secondShape=$AMHelper.getMatchingShape(shapes,null,secondGeoRole);if(secondShape){taskParams.parentKey="parent_"+ROLE_LEVEL_MAP[secondGeoRole];taskParams.secondShapeId=secondShape.id;}}$MUTIL.showWait();if(mstrApp.isDossier){mstrmojo.xhr.request("POST",mstrConfig.taskURL,{success:onSuccess,failure:function(res){console.log("Mapbox geo id conversion failed! "+res.getResponseHeader("X-MSTR-TaskFailureMsg"));if(onError&&res){onError(res);}}},taskParams);}else{mstrApp.serverRequest(taskParams,{success:onSuccess,failure:function(res){console.log("Mapbox geo id conversion failed!");if(onError&&res){onError(res);}}});}},getSingleShapeInfo:function getSingleShapeInfo(feature,dataLookup,geoPosition){if(!feature||!dataLookup||!$MUTIL.checkVal(geoPosition)){return ;}var attributes=this.populateGraphicAttributes(this.data,dataLookup,geoPosition,feature.geoName)||{};this.populateGeoIdAndBBoxInfo(feature,attributes);return{attributes:attributes};},isGeoAttribute:function isGeoAttribute(geoAttributeId,attribute){return $MUTIL.checkDefined(geoAttributeId)&&!!attribute&&(geoAttributeId===attribute.id);},calculateGeoNameDupPercent:function calculateGeoNameDupPercent(features){var shapeToRowIndexMap=this._shapeToRowIndexMap,totalEles=shapeToRowIndexMap?Object.keys(shapeToRowIndexMap).length:0,geoNameCntMap={},dupCnt=0,i,geoName;for(i=0;i<features.length;i++){geoName=features[i].geoName;if(!geoNameCntMap[geoName]){geoNameCntMap[geoName]=1;}else{geoNameCntMap[geoName]++;}}for(geoName in geoNameCntMap){if(geoNameCntMap[geoName]>1){dupCnt++;}}this.duplicateGeoNamePercent=totalEles===0?0:dupCnt/totalEles;},showInfoIcon4GeoItem:function showInfoIcon4GeoItem(){var map=this.map,edtingKey=map&&map.getEditingGridKey(),isCurrentVizBoxSelected=map&&map.isCurrentVizBoxSelected();if(isCurrentVizBoxSelected&&(edtingKey===this.key)){toggleClass(0,this.duplicateGeoNamePercent>0);toggleClass(1,!!this.secondaryGeoInfo);}},getSecondaryGeoInfo:function getSecondaryGeoInfo(){var map=this.map,dzItems=map&&map.getDropZoneItems($EDZ.GeoAttribute,this.key),secondGeoAttr=dzItems&&dzItems[1],rows=this.getDataRows(),il=(rows&&rows.length)||0,allowedGrs=GEO_ROLE_MAP[this.mainGeoRole],aid,rowItem,forms,geoRole,i,j,jl;if(secondGeoAttr&&allowedGrs){aid=secondGeoAttr.id;for(i=0;i<il;i++){rowItem=rows[i];if(rowItem.id===aid){forms=rowItem.fs;jl=(forms&&forms.length)||0;for(j=0;j<jl;j++){geoRole=(forms[j].fgr).toString();if(geoRole&&allowedGrs.indexOf(geoRole)>=0){this.geoSecondaryRolePosition=i;return{geoRole:geoRole,index:i};}}}}}},getTtpContent4GeoItem:function getTtpContent4GeoItem(index){var title,desc,ttpStr="",dpPercent=this.duplicateGeoNamePercent,validSecdGeoRole=!!this.secondaryGeoInfo,getParagraphTTp=function(title,content){var ttp='<div class="name">'+title+"</div>";if(content){ttp+='<div class="dsc">'+content+"</div>";}return ttp;};if(index===0&&dpPercent>0){title=mstrmojo.desc(15717,"We were unable to resolve the exact location for ## of your data.").replace("##",Math.ceil(dpPercent*100)+"%");ttpStr=getParagraphTTp(title);if(!validSecdGeoRole){title=mstrmojo.desc(15719,"Please add one or more geographic attributes to this drop zone to refine the results.");desc=mstrmojo.desc(15720,"For example, if you want to plot states, add the country attribute as a secondary identifier.");ttpStr+='<div class="dividingLine"></div>'+getParagraphTTp(title,desc);}return ttpStr;}else{if(index===1){if(!validSecdGeoRole){title=mstrmojo.desc(15721,"This is not a valid secondary geo role.");if(this.mainGeoRole===$EnumGeographicRole.EnumGeographicRoleZipCode){desc=mstrmojo.desc(16132,"Please use Country as the secondary geo role.");}else{desc=mstrmojo.desc(15722,"Please make sure the geography type is defined and is higher level than primary geo attribute. Otherwise, please remove it.");}return getParagraphTTp(title,desc);}else{return getParagraphTTp(mstrmojo.desc(15723,"This is secondary geo attribute that is helping define your data."));}}}}});}());