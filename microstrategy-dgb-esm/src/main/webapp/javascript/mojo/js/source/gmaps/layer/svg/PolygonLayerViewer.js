(function(){mstrmojo.requiresCls("mstrmojo.hash","mstrmojo.array","mstrmojo.gmaps.geometry.Polygon","mstrmojo.gmaps.layer.svg.GraphicLayerViewer");var $MOJO=mstrmojo,$HASH=$MOJO.hash,$ARR=$MOJO.array,Polygon=$MOJO.gmaps.geometry.Polygon;function convertGeoJSON(geoCoordArr){if(!$ARR.isArray(geoCoordArr)){return ;}var geoPolylineArr=[],polyline;$ARR.forEach(geoCoordArr,function(geoPolyline){polyline=[];$ARR.forEach(geoPolyline,function(geoPoint){if(geoPoint){polyline.push({lat:geoPoint[1],lng:geoPoint[0]});}});geoPolylineArr.push(polyline);});return geoPolylineArr;}function isGeoJSON(graphics){var geoData=graphics&&graphics[0]&&graphics[0].geoData,firstPoint=geoData&&geoData[0]&&geoData[0][0];if(firstPoint){return $ARR.isArray(firstPoint);}}mstrmojo.gmaps.layer.svg.PolygonLayerViewer=mstrmojo.declare(mstrmojo.gmaps.layer.svg.GraphicLayerViewer,null,{scriptClass:"mstrmojo.gmaps.layer.svg.PolygonLayerViewer",init:function init(props){this._super(props);var graphics=this.graphics;if(isGeoJSON(graphics)){$ARR.forEach(graphics,function(graphic){if(graphic){graphic.geoData=convertGeoJSON(graphic.geoData);}});}},getGmtCls:function getGmtCls(){return Polygon;},getGeometryParams:function getGeometryParams(graphic){if(!graphic||!graphic.attributes){return ;}var threshold=graphic.attributes.threshold,screenPolylineArr=graphic.screenData&&graphic.screenData.screenPolylineArr,params=$HASH.copy({screenPolylineArr:screenPolylineArr},this.getFmts());if(threshold){params.fillColor=threshold.colorStr;}return params;}});}());