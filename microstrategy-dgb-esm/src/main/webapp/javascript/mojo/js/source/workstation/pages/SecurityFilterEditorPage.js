(function(){mstrmojo.requiresCls("mstrmojo.array","mstrmojo.hash","mstrmojo.expr","mstrmojo.mstr.EnumNodeType","mstrmojo._IsWebApp","mstrmojo.vi.ui.editors.FilterEditor");mstrmojo.requiresDescs(12032);var PAGE_HTML='<div id="filter-editor"></div>';var FILTER_EDITOR_ELEMENT_ID="filter-editor";var $A=mstrmojo.array,$H=mstrmojo.hash,$EXPR=mstrmojo.expr,$C=mstrmojo.DI.DIConstants,_FN=$EXPR.FN,_ET=$EXPR.ET,_TP=$EXPR.TP,$ENT=mstrmojo.mstr.EnumNodeType,STP_RECURSIVE_ATTRIBUTE=3076;var $ENUM_DataType={Char:8,Date:14,Time:15,TimeStamp:16,BigDecimal:30,Int64:34};var ELEMENT_BLOCK_COUNT=30;var EMPTY_FILTER_OBJECT={root:{nodeType:$ENT.NodeOperator,functionType:$EXPR.FN.AND,expressionType:_ET.ANDOR,nodes:[]},content:""};var formDTMapping={1:$ENUM_DataType.TimeStamp,8:$ENUM_DataType.Date,9:$ENUM_DataType.Time,2:$ENUM_DataType.Int64,3:$ENUM_DataType.Char,11:$ENUM_DataType.BigDecimal,};var buildWalk=function(node,objectInfos,formDataTypes){var result,attributeTagName,formTagName,attribute,form,attributeId,formId;if(node===undefined||node==""){return null;}if(node.functionType===_FN.AND||node.functionType===_FN.OR){if(!node.nodes){return null;}result={fn:node.functionType,et:node.expressionType,node:node.nodeProperty,nds:[]};$A.forEach($A.ensureArray(node.nodes),function(item){result.nds.push(buildWalk(item,objectInfos,formDataTypes));});}else{if(node.functionType===_FN.NOT){var actualNode=node.nodes[0];result=buildWalk(actualNode,objectInfos,formDataTypes);result.not=true;}else{result={fn:node.functionType,et:node.expressionType,node:node.nodeProperty,};$A.forEach($A.ensureArray(node.nodes),function(item){if(item.attribute){attributeTagName=result.a?"a2":"a";formTagName=result.fm?"fm2":"fm";attribute=item.attribute;attributeId=attribute.id;result[attributeTagName]={did:attributeId,n:attribute.name,t:attribute.type,st:attribute.subType};if(item.form){form=item.form;formId=form.id;result[formTagName]={did:formId,n:form.name,t:form.type,dtp:formDTMapping[(formDataTypes[attributeId]||{})[formId]]||$ENUM_DataType.Char,ibf:true,idf:true,itf:true};}}else{if(item.constant){if(item.prompt_instances){}else{result.cs=result.cs||[];result.cs.push({v:item.constant.value,dtp:item.dataType});}}else{if(item.elements){result.es=item.elements.map(function(element){return{n:element.name,v:element.id};});}else{if(item.value!==undefined){result.cs=result.cs||[];result.cs.push({v:item.value,dtp:item.dataType});}}}}});}}return result;};var buildWalkReverse=function(filter){if(!filter){return null;}var result={};if(filter.not){result={nodeType:$ENT.NodeOperator,functionType:_FN.NOT,expressionType:_ET.ANDOR,nodes:[]};delete filter.not;var restFilter=buildWalkReverse(filter);result.nodes.push(restFilter);}else{if("fn" in filter&&(filter.fn===_FN.AND||filter.fn===_FN.OR)){if(Object.prototype.toString.call(filter.nds)==="[object Array]"){result={functionType:filter.fn,expressionType:filter.et,nodeType:$ENT.NodeOperator,nodeProperty:filter.node,nodes:[]};$A.forEach(filter.nds,function(item){result.nodes.push(buildWalkReverse(item));});}else{if(!filter.nds){return null;}result=buildWalkReverse(filter.nds);}}else{result={functionType:filter.fn,expressionType:filter.et,nodeType:$ENT.NodeOperator,nodeProperty:filter.node,nodes:[]};if(filter.a&&filter.fm){var attributeNode={id:filter.a.did,name:filter.a.n,type:filter.a.t,subType:filter.a.st};var formNode={id:filter.fm.did,name:filter.fm.n,type:filter.fm.t};result.nodes.push({attribute:attributeNode,form:formNode,nodeType:$ENT.NodeFormShortcut,expressionType:_ET.XML});}if(filter.a2&&filter.fm2){var attributeNode2={id:filter.a2.did,name:filter.a2.n,type:filter.a2.t,subType:filter.a.st};var formNode2={id:filter.fm2.did,name:filter.fm2.n,type:filter.fm2.t};result.nodes.push({attribute:attributeNode2,form:formNode2,nodeType:$ENT.NodeFormShortcut,expressionType:_ET.XML});}if(filter.a&&filter.es){var elementsAttributeNode={id:filter.a.did,name:filter.a.n,type:filter.a.t,subType:filter.a.st};result.nodes.push({attribute:elementsAttributeNode,nodeType:$ENT.NodeShortcut,});var elements=[];$A.forEach(filter.es,function(item){elements.push({name:item.n,id:item.v});});result.nodes.push({nodeType:$ENT.NodeElementsObject,elements:elements});}if(filter.cs){$A.forEach(filter.cs,function(item){result.nodes.push({nodeType:$ENT.NodeConstant,expressionType:_ET.XML,dataType:item.dtp,constant:{value:item.v.toString()}});});}}}return result;};function convertRestExpressionToFilterEditorExpression(restFilter,reportXDADefinition){if(!reportXDADefinition||!reportXDADefinition.datap){return null;}var formDataTypes={};$A.forEach(reportXDADefinition.datap,function tableHandler(table){$A.forEach(table.maps.amps,function attributeHandler(attribute){var attributeId=attribute.aimp.atid;formDataTypes[attributeId]={};$A.forEach(attribute.afmps,function formHandler(form){formDataTypes[attributeId][form.fmid]=form.bft;});});});var filter="";var userFilter=restFilter;if("root" in userFilter&&!$H.equals(userFilter,EMPTY_FILTER_OBJECT)){filter=buildWalk(userFilter.root,[],formDataTypes);}return filter;}function convertRestAttributesToFilterEditorTargets(restAttributes){if(!restAttributes||!restAttributes.datap){return{};}var targets=[],attributeForms={};$A.forEach(restAttributes.datap,function(table){$A.forEach(table.maps.amps,function(item){var attributeID=item.aimp.atid;if($A.find(targets,"did",attributeID)===-1){targets.push({n:item.aimp.atnm,did:attributeID,t:_TP.ATTR,st:(item.aimp.recurisve===1)?STP_RECURSIVE_ATTRIBUTE:null,lvfs:item.lvfs});}$A.forEach(item.afmps,function(form){attributeForms[attributeID]=attributeForms[attributeID]||[];if($A.find(attributeForms[attributeID],"did",form.fmid)<0){attributeForms[attributeID].push({did:form.fmid,dtp:mstrmojo.expr.mapBaseFormTypeToDataType(form.bft),n:form.fmn,t:_TP.ATTR});}});});});return{targets:targets,attributeForms:attributeForms};}function convertFilterEditorExpressionToRestExpression(filterExpression){var filterExpObj=buildWalkReverse(filterExpression);if(!filterExpObj||filterExpObj.functionType!==_FN.AND){var restObject=EMPTY_FILTER_OBJECT;if(filterExpObj){restObject.root.nodes.push(filterExpObj);}return restObject;}else{return{root:filterExpObj};}}function convertRestElementsToWebFormat(elementsInfo,blockBegin){var elements=[];$A.forEach(elementsInfo.elements,function(element){elements.push({v:element.id,n:element.name});});return{sz:elementsInfo.size,es:elements,bc:elements.length,bb:blockBegin};}function isCubeMDXRACube(reportXDADefinition){if(reportXDADefinition.datap.length===1){var datapItem=reportXDADefinition.datap[0];if(datapItem.xt===$C.xdaType.mdx){return $A.some(datapItem.maps.amps,function(ampsItem){var aimap=ampsItem.aimp;return(aimap&&aimap.recurisve===1);});}}return false;}mstrmojo.workstation.pages.SecurityFilterEditorPage=mstrmojo.declare(mstrmojo.Base,null,{params:null,rootDomNode:null,saveHandler:function(){mstrmojo.alert("Save not implemented");return Promise.resolve(false);},closeHandler:function(){mstrmojo.alert("Close not implemented");return Promise.resolve(false);},searchAttributeElementsHandler:function(searchCondition){mstrmojo.alert("Search element not implemented");return Promise.resolve(false);},load:function(){var page=this;window.mstrApp=window.mstrApp||{};window.mstrApp.isWorkstation=true;mstrmojo.css.addClass(window.document.body,"workstation");var params=this.params;for(var key in params){if(params.hasOwnProperty(key)&&typeof params[key]==="string"){params[key]=JSON.parse(params[key]);}}var filterExpression=convertRestExpressionToFilterEditorExpression(params.expression,params.reportXDADefinition);var model=convertRestAttributesToFilterEditorTargets(params.reportXDADefinition);var rootDomNode=this.rootDomNode;rootDomNode.innerHTML=PAGE_HTML;var getAttrFms=function getAttributeForms(did){return model.attributeForms&&model.attributeForms[did];};var filterModel={expr:filterExpression,targets:model.targets};var isMDXRACube=isCubeMDXRACube(params.reportXDADefinition);var filterEditor=mstrmojo.insert({id:"fe",placeholder:FILTER_EDITOR_ELEMENT_ID,scriptClass:"mstrmojo.vi.ui.editors.FilterEditor",skipAndOrPopup:true,showLimits:false,cssClass:"mstrmojo-charcoalboxe mstrmojo-FE mstrmojo-vi-ui-FE acl-security-filter",defaultExpressionType:_ET.AQ,getAttributeForms:getAttrFms,conditionEditorNotDraggable:true,onSave:function(model){var editor=this;editor._saving=true;var exp=convertFilterEditorExpressionToRestExpression(model.expr);page.saveHandler({expression:exp}).then(function(success){delete editor._saving;if(success){editor.close();}else{mstrmojo.alert("Failed to save");}});},close:function(config){if(this._saving){return ;}this.constructor.prototype.close.call(this,config);},onClose:function(){page.closeHandler();}});filterEditor.set("model",filterModel);filterEditor.set("getIfDataSource",function(){return{browseElements:function(searchCondition,callbacks){var useRestAPI=!isMDXRACube;searchCondition.useRestAPI=useRestAPI;searchCondition.offset=searchCondition.blockBegin-1;searchCondition.limit=searchCondition.blockCount||ELEMENT_BLOCK_COUNT;mstrmojo._IsWebApp.showWait();page.searchAttributeElementsHandler(searchCondition).then(function(elementsStr){mstrmojo._IsWebApp.hideWait();var webResults=JSON.parse(elementsStr);if(useRestAPI){webResults=convertRestElementsToWebFormat(webResults,searchCondition.blockBegin);}callbacks.success(webResults);callbacks.complete();},function(message){mstrmojo._IsWebApp.hideWait();var errorMessage;try{errorMessage=JSON.parse(message);}catch(e){errorMessage=message;}finally{callbacks.failure(errorMessage);}});}};});filterEditor.open();}});mstrmojo.workstation.pages.FilterEditorPage=mstrmojo.declare(mstrmojo.workstation.pages.SecurityFilterEditorPage,null,{});}());