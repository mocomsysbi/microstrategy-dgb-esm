(function(){mstrmojo.requiresCls("mstrmojo.array","mstrmojo.gmaps.MapUtils","mstrmojo.gmaps.GraphicUtils","mstrmojo.gmaps.layer.PolygonLayer","mstrmojo.gmaps._AreaMapHelper","mstrmojo.gmaps.layer._SecondaryGeoRoleHelper");var $ARR=mstrmojo.array,$GMAPS=mstrmojo.gmaps,$MUTIL=$GMAPS.MapUtils,$GUTIL=$GMAPS.GraphicUtils,$EnumBaseMapType=$GMAPS.EnumBaseMapType,$DEFAULT_QUERY_LIMIT=500,ATTRIBUTE_DELIMITER=",";mstrmojo.gmaps.layer.CloudLayer=mstrmojo.declare(mstrmojo.gmaps.layer.PolygonLayer,[mstrmojo.gmaps.layer._SecondaryGeoRoleHelper],{scriptClass:"mstrmojo.gmaps.layer.CloudLayer",isOnPremise:null,attributeMapping:null,spatialReference:null,geoSecondaryRolePosition:null,_shapeToRowIndexMap:null,_convertedNameMap:null,nameConversionMap:null,initGraphics:function initGraphics(toRefresh){if(!this.readyToInit()){return ;}if(!this._super()){return ;}$MUTIL.showWait();var geoPosition=this.geoPosition,baseMapType=this.parent&&this.parent.getBaseMapType(),_shapeInfoArrCache=this._shapeInfoArrCache;if(geoPosition<0){$MUTIL.log("Invalid geoPosition");this.updateMapExtent();return ;}this.loadExtraProps();switch(baseMapType){case $EnumBaseMapType.Esri:if(toRefresh&&$ARR.isArray(_shapeInfoArrCache)&&_shapeInfoArrCache.length>0){this.buildLayerContent(_shapeInfoArrCache,geoPosition,this.mappedValue,toRefresh);}else{this._initEsriGraphics(geoPosition);}break;default:console.log("Requested cloud layer is not supported");this.updateMapExtent();break;}},_initEsriGraphics:function _initEsriGraphics(geoPosition){var row=this.getDataRows(),geoAttributeId=row&&row[geoPosition]&&row[geoPosition].id,mappedValue=this.mappedValue=this.getMappedValue(geoAttributeId);this._shapeToRowIndexMap=this._shapeToRowIndexMap||{};this._convertedNameMap=this._convertedNameMap||{};this.nameConversionMap=this.getNameConversionMap();if(!$MUTIL.checkDefined(geoAttributeId)||!$MUTIL.checkDefined(mappedValue)){console.log("initEsriGraphics: invalid geoAttributeId or mappedValue");this.updateMapExtent();return ;}this.requestAndInitShapeInfo(geoPosition,mappedValue);},requestAndInitShapeInfo:function requestAndInitShapeInfo(geoPosition,mappedValue){var rowHeaders=this.getDataRowHeaders(),geoCount=rowHeaders&&rowHeaders.length,queryLimit;if(!geoCount){console.log("initEsriGraphics: invalid geoCount");this.updateMapExtent();return ;}queryLimit=_isOneTierMac()?50:$DEFAULT_QUERY_LIMIT;try{$MUTIL.showWait();if(geoCount>queryLimit){this.createShapesUsingIncrementFetching(geoCount,mappedValue,queryLimit,geoPosition);}else{this.createShapesUsingNormalFetching(geoCount,mappedValue,geoPosition);}}catch(err){$MUTIL.log("error: "+err);$MUTIL.hideWait();this.updateMapExtent();}},createShapesUsingNormalFetching:function createShapesUsingNormalFetching(geoCount,mappedValue,geoPosition){if(!$MUTIL.checkVal(geoCount)||!mappedValue||!mappedValue.ml||!$MUTIL.checkVal(geoPosition)){throw"createShapesUsingNormalFetching: invalid params";}var queryTask=new esri.tasks.QueryTask(mappedValue.ml),query=new esri.tasks.Query(),layerId=this.id;query.returnGeometry=true;query.outFields=this._getOutFieldsArr(mappedValue);query.outSpatialReference=this.spatialReference;query.where=this.buildQueryWhere(0,geoCount,mappedValue.ea,geoPosition);queryTask.execute(query,function onQueryComplete(featureSet){var layer=$MUTIL.getGraphicLayerById(layerId);if(layer){layer.buildLayerContent(featureSet.features,geoPosition,mappedValue);}$MUTIL.hideWait();},function onQueryError(error){var layer=$MUTIL.getGraphicLayerById(layerId);if(layer){layer.updateMapExtent();}if(!!error.description&&error.description.indexOf("esri.config.defaults.io.proxyUrl is not set")>-1){console.log("Query request too large. Please configure proxy setting in the esriconfig.xml and try again");}else{console.log("queryTask error:"+error.name+":"+error.description);}$MUTIL.hideWait();});},createShapesUsingIncrementFetching:function createShapesUsingIncrementFetching(geoCount,mappedValue,queryLimit,geoPosition){if(!$MUTIL.checkVal(geoCount)||!mappedValue||!$MUTIL.checkVal(queryLimit)||!$MUTIL.checkDefined(geoPosition)){throw"createShapesUsingIncrementFetching(): failed";}var layerId=this.id,queryTask=new esri.tasks.QueryTask(mappedValue.ml),outFields=this._getOutFieldsArr(mappedValue),query,start,end,i,steps;if(!$MUTIL.checkDefined(outFields)){throw"createShapesUsingIncrementFetching(): invalid outFields";}this._returnedQuery=0;this._features=[];for(i=0,steps=Math.ceil(geoCount/queryLimit);i<steps;i++){start=i*queryLimit;end=Math.min(start+queryLimit,geoCount);query=new esri.tasks.Query();query.returnGeometry=true;query.outFields=outFields;query.outSpatialReference=this.spatialReference;query.where=this.buildQueryWhere(start,end,mappedValue.ea,geoPosition);queryTask.execute(query,function onQueryComplete(featureSet){var layer=$MUTIL.getGraphicLayerById(layerId);if(layer){layer.onIncrementalQueryFeaturesComplete(featureSet.features,geoPosition,steps,mappedValue);}else{$MUTIL.hideWait();}},function onQueryError(err){$MUTIL.log("Error incremental fetching: "+err);var layer=$MUTIL.getGraphicLayerById(layerId);if(layer){layer.onIncrementalQueryFeaturesComplete([],geoPosition,steps,mappedValue);}else{$MUTIL.hideWait();}});}},onIncrementalQueryFeaturesComplete:function onIncrementalQueryFeaturesComplete(features,geoPosition,total,mappedValue){this._returnedQuery++;this._features=(this._features||[]).concat(features);if(this._returnedQuery===total){this.buildLayerContent(this._features,geoPosition,mappedValue);delete this._features;$MUTIL.hideWait();}},getSingleShapeInfo:function getSingleShapeInfo(shapeItem,dataLookup,geoPosition,mappedValue){if(!shapeItem||!mappedValue||!dataLookup||!$MUTIL.checkVal(geoPosition)){return ;}var esriField=mappedValue.ea,geoName=this._extractGeoName(shapeItem,mappedValue),attributes=shapeItem.attributes,geoCoordArr,centroidOfPolygon,rowIndex,graphicAttrs;if(!geoName){$MUTIL.log("Warning: "+esriField+" not found in featureSet from ESRI server! Please ensure the field "+esriField+" is present in FeatureLayer specified by  <ml> value in esriConfig.xml");return false;}if(geoName.length===0||!this._shapeToRowIndexMap[geoName.toLowerCase?geoName.toLowerCase():geoName]){$MUTIL.log("skipping "+geoName);return ;}rowIndex=dataLookup[geoName.toLowerCase?geoName.toLowerCase():geoName].rowIndex;if(rowIndex!==undefined){geoCoordArr=shapeItem.geometry&&shapeItem.geometry.rings;centroidOfPolygon=$GUTIL.getCentroidOfPolygon(geoCoordArr);if(!!geoCoordArr&&centroidOfPolygon){graphicAttrs=this.populateGraphicAttributes(this.data,dataLookup,geoPosition,geoName,attributes&&attributes.sfv)||{};return{type:"Polygon",geoData:geoCoordArr,attributes:this.wrapOutfieldsAttrs(attributes,graphicAttrs),lat:centroidOfPolygon[1],lng:centroidOfPolygon[0]};}}else{$MUTIL.log("Missing..."+geoName);}},wrapOutfieldsAttrs:function wrapOutfieldsAttrs(srcAttrs,tgtAttrs){var outFieldsArr=this._extractShapeQf(this.mappedValue&&this.mappedValue.qf);$ARR.forEach(outFieldsArr,function(field){if(field&&(srcAttrs[field]||srcAttrs[field=field.toUpperCase()]||srcAttrs[field=field.toLowerCase()])&&!tgtAttrs[field]){tgtAttrs[field]=srcAttrs[field];}});return tgtAttrs;},_extractGeoName:function _extractGeoName(feature,mappedValue){var attributes=feature&&feature.attributes;if(!attributes||!mappedValue){return ;}var esriField=mappedValue.ea,geoName=attributes[esriField]||attributes[mappedValue.ea=esriField.toLowerCase()]||attributes[mappedValue.ea=esriField.toUpperCase()],idString=(this._convertedNameMap[geoName])?this._convertedNameMap[geoName]:geoName,sf=mappedValue.sf,secondaryFieldName;if(idString&&this.geoSecondaryRolePosition!==-1&&sf&&sf.length>0){secondaryFieldName=attributes[sf]||attributes[mappedValue.sf=sf.toLowerCase()]||attributes[mappedValue.sf=sf.toUpperCase()];idString+=ATTRIBUTE_DELIMITER+secondaryFieldName;}attributes.sfv=secondaryFieldName;return $MUTIL.trimString(idString);},buildQueryWhere:function buildQueryWhere(start,end,field,geoPosition){var idStringArr=[],rowHeaders=this.getDataRowHeaders(),secondGeoPosition=this.geoSecondaryRolePosition,rowGeoHeader,idString,queryWhere,i,tmp;for(i=start;i<end;i++){idString=this.getIdStringForRow(i,geoPosition,secondGeoPosition);idString=idString.toLowerCase?idString.toLowerCase():idString;tmp=this.checkName(i,geoPosition);if(tmp){idStringArr.push("N'"+tmp+"'");}else{continue;}if(!!this._shapeToRowIndexMap[idString]){continue;}rowGeoHeader=rowHeaders[i].items[geoPosition];this._shapeToRowIndexMap[idString]={rowIndex:i,geoIndex:rowGeoHeader.idx};}queryWhere="("+field+" in ("+idStringArr.join(", ")+")) AND (1=1)";return queryWhere;},checkName:function checkName(i,geoPosition){return this.escapeSingleQuote(this.convertName(this.getElementValue(i,geoPosition)));},escapeSingleQuote:function escapeSingleQuoate(str){return str.replace("'","''");},_getOutFieldsArr:function _getOutFieldsArr(mappedValue){if(!mappedValue){console.log("_getOutFieldsArr(): invalid mappedValue");return ;}try{var sf=mappedValue.sf,outFieldsArr=this._extractShapeQf(mappedValue.qf);if(!$ARR.isArray(outFieldsArr)){return ;}if(sf&&sf.length>0){outFieldsArr.push(sf);}return outFieldsArr;}catch(e){console.log("err: "+e);}},getMappedValue:function getMappedValue(geoAttributeId){var mappedValue;if(this.isOnPremise){mappedValue=this.attributeMapping[geoAttributeId];if(mappedValue&&mappedValue.ml){mappedValue.ml=$MUTIL._verifyProtocol(mappedValue.ml);}}else{mappedValue=this.initWebMapConfig(true);}if(mappedValue){mappedValue.sf=$MUTIL.trimString(mappedValue.sf);}return mappedValue;},loadLayerProps:function loadLayerProps(layerProps){this._super(layerProps);var baseLayer=this.parent&&this.parent.baseLayer;this.attributeMapping=baseLayer&&baseLayer.attributeMapping;},loadExtraProps:function loadExtraProps(){var baseLayer=this.parent&&this.parent.baseLayer;if(baseLayer){this.isOnPremise=baseLayer.isOnPremise;this.spatialReference=baseLayer.wgs84SP;}},isGeoAttribute:function isGeoAttribute(geoAttributeId,attribute){var attributeMapping=this.attributeMapping,attributeId=attribute&&attribute.id;return !!attributeMapping&&($MUTIL.checkDefined(attributeId))&&((!this.isOnPremise&&geoAttributeId===attributeId)||(this.isOnPremise&&attributeMapping[attributeId]));},supportDataLabel:function(){var baseMapType=this.parent&&this.parent.getBaseMapType();return baseMapType===$EnumBaseMapType.Esri;},readyToInit:function readyToInit(){var parent=this.parent;return !!parent&&!!parent.cloudLayerInit;}});function _isOneTierMac(){return mstrApp.isSingleTier&&mstrmojo.dom.getOSInfo().name.toLowerCase().indexOf("mac")>=0;}}());